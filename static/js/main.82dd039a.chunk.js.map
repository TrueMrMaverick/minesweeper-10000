{"version":3,"sources":["core/workers/mapGenerator.ts","components/cell/Cell.tsx","assets/happy.svg","components/field/Field.tsx","assets/sad.svg","assets/surprised.svg","assets/victorious.svg","components/gameUi/GameUI.tsx","core/utils/localStorage.ts","components/settingsDialog/SettingsDialog.tsx","components/gameMenu/GameMenu.tsx","App.tsx","core/store/types/mapOptions.ts","reportWebVitals.ts","index.tsx","core/store/types/gameState.ts","core/map/types/cell.ts","core/store/types/appStore.ts","core/store/store.ts","core/subject.ts","core/map/minesweeperMap.ts","core/utils/timer.ts","core/utils/calculateNeighbours.ts","core/utils/collectionNode.ts","core/utils/queue.ts"],"names":["module","exports","CellColor","getCellValue","value","isCellValue","CellValueOpen","mine","empty","getCellColor","gameState","undefined","openEmpty","GameState","Lost","isMine","openMine","isCellValueFlag","closed","_g","Cell","props","onClick","onContextMenu","map","columnIndex","rowIndex","getCellClickHandler","getCellContextMenuHandler","state","getCellValueXY","nextProps","nextState","nextContext","InGame","this","Won","style","backgroundColor","className","e","newValue","setState","preventDefault","GolfCourse","prevState","Component","Field","useState","mapOptions","setMapOptions","setMap","appStore","getValue","AppStoreEntries","setGameState","useEffect","gameStateSub","getSubject","subscribe","newGameState","unsubscribe","newMap","Loading","destroy","sub","newOptions","width","height","mineCount","MinesweeperMap","generate","gridWidth","gridHeight","rowCount","columnCount","rowHeight","columnWidth","cellRenderer","key","_excluded","_extends","Object","assign","target","i","arguments","length","source","prototype","hasOwnProperty","call","apply","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgHappy","_ref","svgRef","title","titleId","xmlns","viewBox","preserveAspectRatio","ref","id","transform","fill","stroke","d","ForwardRef","SvgSad","SvgSurprised","SvgVictorious","Face","React","memo","Happy","Refreshing","Surprised","Sad","Victorious","GameUI","useStoreState","mineCounter","timer","LocalStorage","optionsString","localStorage","getItem","toString","JSON","parse","options","setItem","stringify","SettingsDialog","openSubj","useSubject","open","setOpen","widthState","heightState","mineCountState","setWidth","widthErrors","setWidthErrors","setHeight","heightErrors","setHeightErrors","setMineCount","mineCountErrors","setMineCountErrors","Number","size","setSize","handleCancel","Dialog","onClose","DialogTitle","DialogContent","TextField","label","onChange","rawValue","replace","errors","push","error","helperText","DialogActions","Button","disabled","newMapOptions","GameMenu","anchorEl","setAnchorEl","Boolean","Subject","dialogOpenSubj","Paper","IconButton","event","currentTarget","MoreVert","Menu","anchorOrigin","vertical","horizontal","transformOrigin","MenuItem","next","register","getMapOptions","App","StyledEngineProvider","injectFirst","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","CellState","CellValue","CellValueFlag","val","isCellValueOpen","Symbol","mapState","reactiveState","Map","bind","unregister","initialValue","set","delete","has","Error","get","_value","subscribers","nextSubIndex","forEach","notifier","queueMicrotask","clear","skipFirst","index","subject","setValue","totalMineCount","threadsNumber","_arrayBuffer","_map","_width","_height","_totalMineCount","allocatedBytes","generators","Array","generatorsWorkers","Timer","chainOpenQueue","Queue","mineCountSubj","cellsLeftToOpen","firstClick","emptyCellIndex","destroyed","stop","SharedArrayBuffer","Int8Array","notDefined","worker","Worker","name","type","mapGenerator","wrap","generator","releaseProxy","terminate","a","t0","performance","now","Promise","all","generateMap","arr","filter","Math","floor","random","calculateNeighboursInRange","start","end","t1","console","log","cellValue","handleMineFirstClick","newCellValue","setCellValueXY","chainOpen","openedCells","setCellValue","Atomics","store","load","columnRange","rowRange","calculateNeighbours","getCellNeighbours","neighbour","neighbourValue","emptyCellCol","emptyCellRow","initiator","getIndex","neighbours","neighbourIndex","generatorIndex","reduce","acc","timerSubject","intervalId","setInterval","timePassed","clearInterval","counter","column","row","CollectionNode","head","tail","_size","isEmpty","newNode"],"mappings":"2IAAAA,EAAOC,QAAU,IAA0B,wC,4CCMtCC,E,yIAML,SAASC,EAAaC,GAClB,GAAKA,IAASC,YAAYD,IAItBA,IAAUE,IAAcC,MAAQH,IAAUE,IAAcE,MAI5D,OAAOJ,EAAQ,GAGnB,SAASK,EAAaL,EAAiCM,GACnD,YAAcC,IAAVP,EACOF,EAAUU,UAGjBF,IAAcG,IAAUC,MAAQC,YAAOX,GAChCF,EAAUc,SAGjBX,YAAYD,IAAUa,YAAgBb,GAC/BF,EAAUgB,OAGjBH,YAAOX,GACAF,EAAUc,SAGdd,EAAUU,W,SAnChBV,K,cAAAA,E,eAAAA,E,mBAAAA,M,KAsCE,IC5CHiB,ED4CSC,EAAb,kDAKI,WAAYC,GAAmB,IAAD,uBAC1B,cAAMA,IAJOC,aAGa,IAFbC,mBAEa,EAG1B,MAAqC,EAAKF,MAAnCG,EAAP,EAAOA,IAAKC,EAAZ,EAAYA,YAAaC,EAAzB,EAAyBA,SAHC,OAK1B,EAAKJ,QAAUE,EAAIG,oBAAoBF,EAAaC,GACpD,EAAKH,cAAgBC,EAAII,0BAA0BH,EAAaC,GAEhE,EAAKG,MAAQ,CACTzB,MAAOoB,EAAIM,eAAeL,EAAaC,IATjB,EALlC,yDAkBI,SAAsBK,EAAgCC,EAA8CC,GAChG,OAAIF,EAAUrB,YAAcG,IAAUqB,OAC3BF,EAAU5B,QAAU+B,KAAKN,MAAMzB,OAGlC2B,EAAUrB,YAAcG,IAAUuB,KAAOL,EAAUrB,YAAcG,IAAUC,OAASC,YAAOiB,EAAU5B,SAvBrH,oBA2CI,WAAU,IAAD,OACL,EAGI+B,KAAKd,MAFLgB,EADJ,EACIA,MACA3B,EAFJ,EAEIA,UAGGN,EAAS+B,KAAKN,MAAdzB,MAEP,YAAcO,IAAVP,EACO,qBAAKiC,MAAK,2BAAMA,GAAN,IAAaC,gBAAiB,YAK/C,qBAAKC,UAAS,YACTF,MAAK,2BACEA,GADF,IAEDC,gBAAiB7B,EAAaL,EAAOM,KAEzCY,QAAS,SAACkB,GACN,IAAMC,EAAW,EAAKnB,eACLX,IAAb8B,GAA0BA,IAAarC,GACvC,EAAKsC,SAAS,CAACtC,MAAOqC,KAG9BlB,cAAe,SAACiB,GACZA,EAAEG,iBAEF,IAAMF,EAAW,EAAKlB,qBACLZ,IAAb8B,GAA0BA,IAAarC,GACvC,EAAKsC,SAAS,CAACtC,MAAOqC,KAhBnC,SAoBQrC,IAAUa,YAAgBb,IAAWM,IAAcG,IAAUuB,KAAOrB,YAAOX,IACrE,cAACwC,EAAA,EAAD,IACAzC,EAAaC,QA/EvC,uCA0BI,SAAgC2B,EAAsBc,GAClD,IACIpB,EAIAM,EAJAN,YACAC,EAGAK,EAHAL,SACAhB,EAEAqB,EAFArB,UACAc,EACAO,EADAP,IAEJ,OAAMd,IAAcG,IAAUqB,QAAUxB,IAAcG,IAAUuB,KAAO1B,IAAcG,IAAUC,KACpF,KAGJ,CACHV,MAAOoB,EAAIM,eAAeL,EAAaC,QAtCnD,GAA0BoB,a,wBElCbC,EAAuB,WAChC,MAAoCC,qBAApC,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAAsBF,wBAAqCrC,GAA3D,mBAAOa,EAAP,KAAY2B,EAAZ,KACA,EAAkCH,mBAASI,IAASC,SAASC,IAAgB5C,YAA7E,mBAAOA,EAAP,KAAkB6C,EAAlB,KA+BA,GA7BAC,qBAAU,WACN,IAAMC,EAAgBL,IAASM,WAAWJ,IAAgB5C,WAAkCiD,WAAU,SAAAC,GAClGL,EAAaK,MAGjB,OAAO,WACHH,EAAaI,iBAElB,IAEHL,qBAAU,WACN,IAAIM,EAEJ,GAAIpD,IAAcG,IAAUkD,QAAS,CAC9B,OAAHvC,QAAG,IAAHA,KAAKwC,UACLb,OAAOxC,GACP,IAAMsD,EAAOb,IAASM,WAAWJ,IAAgBL,YAAoCU,WAAU,SAAAO,GAC3FD,EAAIJ,cAEJ,IAAOM,EAA4BD,EAA5BC,MAAOC,EAAqBF,EAArBE,OAAQC,EAAaH,EAAbG,UACnB,OAAH7C,QAAG,IAAHA,KAAKwC,UACLF,EAAS,IAAIQ,IAAeH,EAAOC,EAAQC,GAC3ClB,EAAOW,GACPZ,EAAcgB,GACdJ,EAAOS,iBAGhB,CAAC7D,KAECc,IAASyB,GAAcvC,IAAcG,IAAUkD,QAChD,OAAO,6BAGX,IAAOI,EAAiBlB,EAAjBkB,MAAOC,EAAUnB,EAAVmB,OACd,OACI,mCACI,8BACI,cAAC,IAAD,CAAW/B,MAAO,CAAC8B,MAAO,OAAQC,OAAQ,sBAA1C,SAEQ,gBAASI,EAAT,EAAEL,MAA0BM,EAA5B,EAAoBL,OAApB,OAA6C,mCACzC,cAAC,IAAD,CACIM,SAAUN,EACVO,YAAaR,EACbS,UAAW,GACXR,OAAQK,EACRN,MAAOK,EACPK,YAAa,GACbC,aAAc,YAA0C,IAAxCrD,EAAuC,EAAvCA,YAAaC,EAA0B,EAA1BA,SAAUqD,EAAgB,EAAhBA,IAAK1C,EAAW,EAAXA,MACxC,OACI,cAAC,EAAD,CAAMA,MAAOA,EAEP3B,UAAWA,EACXc,IAAKA,EACLC,YAAaA,EACbC,SAAUA,GAJLqD,gB,4CD/D/CC,EAAY,CAAC,QAAS,WAE1B,SAASC,IAA2Q,OAA9PA,EAAWC,OAAOC,QAAU,SAAUC,GAAU,IAAK,IAAIC,EAAI,EAAGA,EAAIC,UAAUC,OAAQF,IAAK,CAAE,IAAIG,EAASF,UAAUD,GAAI,IAAK,IAAIN,KAAOS,EAAcN,OAAOO,UAAUC,eAAeC,KAAKH,EAAQT,KAAQK,EAAOL,GAAOS,EAAOT,IAAY,OAAOK,IAA2BQ,MAAMzD,KAAMmD,WAEhT,SAASO,EAAyBL,EAAQM,GAAY,GAAc,MAAVN,EAAgB,MAAO,GAAI,IAAkET,EAAKM,EAAnED,EAEzF,SAAuCI,EAAQM,GAAY,GAAc,MAAVN,EAAgB,MAAO,GAAI,IAA2DT,EAAKM,EAA5DD,EAAS,GAAQW,EAAab,OAAOc,KAAKR,GAAqB,IAAKH,EAAI,EAAGA,EAAIU,EAAWR,OAAQF,IAAON,EAAMgB,EAAWV,GAAQS,EAASG,QAAQlB,IAAQ,IAAaK,EAAOL,GAAOS,EAAOT,IAAQ,OAAOK,EAFxMc,CAA8BV,EAAQM,GAAuB,GAAIZ,OAAOiB,sBAAuB,CAAE,IAAIC,EAAmBlB,OAAOiB,sBAAsBX,GAAS,IAAKH,EAAI,EAAGA,EAAIe,EAAiBb,OAAQF,IAAON,EAAMqB,EAAiBf,GAAQS,EAASG,QAAQlB,IAAQ,GAAkBG,OAAOO,UAAUY,qBAAqBV,KAAKH,EAAQT,KAAgBK,EAAOL,GAAOS,EAAOT,IAAU,OAAOK,EAMne,SAASkB,EAASC,EAAMC,GACtB,IAAIC,EAAQF,EAAKE,MACbC,EAAUH,EAAKG,QACfrF,EAAQwE,EAAyBU,EAAMvB,GAE3C,OAAoB,gBAAoB,MAAOC,EAAS,CACtD0B,MAAO,6BACPxC,MAAO,eACPC,OAAQ,eACRwC,QAAS,8BACTC,oBAAqB,gBACrBC,IAAKN,EACL,kBAAmBE,GAClBrF,GAAQoF,EAAqB,gBAAoB,QAAS,CAC3DM,GAAIL,GACHD,GAAS,KAAMtF,IAAOA,EAAkB,gBAAoB,IAAK,CAClE6F,UAAW,2DACXC,KAAM,eACNC,OAAQ,QACM,gBAAoB,OAAQ,CAC1CC,EAAG,8iCACY,gBAAoB,OAAQ,CAC3CA,EAAG,qEACY,gBAAoB,OAAQ,CAC3CA,EAAG,qEACY,gBAAoB,OAAQ,CAC3CA,EAAG,uRAIP,IE1CI,EF0CAC,EAA0B,aAAiBd,GExC3C,GFyCW,IEzCC,CAAC,QAAS,YAE1B,SAAS,IAA2Q,OAA9P,EAAWpB,OAAOC,QAAU,SAAUC,GAAU,IAAK,IAAIC,EAAI,EAAGA,EAAIC,UAAUC,OAAQF,IAAK,CAAE,IAAIG,EAASF,UAAUD,GAAI,IAAK,IAAIN,KAAOS,EAAcN,OAAOO,UAAUC,eAAeC,KAAKH,EAAQT,KAAQK,EAAOL,GAAOS,EAAOT,IAAY,OAAOK,IAA2BQ,MAAMzD,KAAMmD,WAEhT,SAAS,EAAyBE,EAAQM,GAAY,GAAc,MAAVN,EAAgB,MAAO,GAAI,IAAkET,EAAKM,EAAnED,EAEzF,SAAuCI,EAAQM,GAAY,GAAc,MAAVN,EAAgB,MAAO,GAAI,IAA2DT,EAAKM,EAA5DD,EAAS,GAAQW,EAAab,OAAOc,KAAKR,GAAqB,IAAKH,EAAI,EAAGA,EAAIU,EAAWR,OAAQF,IAAON,EAAMgB,EAAWV,GAAQS,EAASG,QAAQlB,IAAQ,IAAaK,EAAOL,GAAOS,EAAOT,IAAQ,OAAOK,EAFxM,CAA8BI,EAAQM,GAAuB,GAAIZ,OAAOiB,sBAAuB,CAAE,IAAIC,EAAmBlB,OAAOiB,sBAAsBX,GAAS,IAAKH,EAAI,EAAGA,EAAIe,EAAiBb,OAAQF,IAAON,EAAMqB,EAAiBf,GAAQS,EAASG,QAAQlB,IAAQ,GAAkBG,OAAOO,UAAUY,qBAAqBV,KAAKH,EAAQT,KAAgBK,EAAOL,GAAOS,EAAOT,IAAU,OAAOK,EAMne,SAASiC,EAAOd,EAAMC,GACpB,IAAIC,EAAQF,EAAKE,MACbC,EAAUH,EAAKG,QACfrF,EAAQ,EAAyBkF,EAAM,GAE3C,OAAoB,gBAAoB,MAAO,EAAS,CACtDI,MAAO,6BACPxC,MAAO,QACPC,OAAQ,QACRwC,QAAS,kBACTC,oBAAqB,gBACrBC,IAAKN,EACL,kBAAmBE,GAClBrF,GAAQoF,EAAqB,gBAAoB,QAAS,CAC3DM,GAAIL,GACHD,GAAS,KAAM,IAAO,EAAkB,gBAAoB,IAAK,CAClEO,UAAW,2DACXC,KAAM,eACNC,OAAQ,QACM,gBAAoB,OAAQ,CAC1CC,EAAG,8iCACY,gBAAoB,OAAQ,CAC3CA,EAAG,qRACY,gBAAoB,OAAQ,CAC3CA,EAAG,qRACY,gBAAoB,OAAQ,CAC3CA,EAAG,wRAIP,IC1CI,ED0CA,EAA0B,aAAiBE,GCxC3C,GDyCW,ICzCC,CAAC,QAAS,YAE1B,SAAS,IAA2Q,OAA9P,EAAWnC,OAAOC,QAAU,SAAUC,GAAU,IAAK,IAAIC,EAAI,EAAGA,EAAIC,UAAUC,OAAQF,IAAK,CAAE,IAAIG,EAASF,UAAUD,GAAI,IAAK,IAAIN,KAAOS,EAAcN,OAAOO,UAAUC,eAAeC,KAAKH,EAAQT,KAAQK,EAAOL,GAAOS,EAAOT,IAAY,OAAOK,IAA2BQ,MAAMzD,KAAMmD,WAEhT,SAAS,EAAyBE,EAAQM,GAAY,GAAc,MAAVN,EAAgB,MAAO,GAAI,IAAkET,EAAKM,EAAnED,EAEzF,SAAuCI,EAAQM,GAAY,GAAc,MAAVN,EAAgB,MAAO,GAAI,IAA2DT,EAAKM,EAA5DD,EAAS,GAAQW,EAAab,OAAOc,KAAKR,GAAqB,IAAKH,EAAI,EAAGA,EAAIU,EAAWR,OAAQF,IAAON,EAAMgB,EAAWV,GAAQS,EAASG,QAAQlB,IAAQ,IAAaK,EAAOL,GAAOS,EAAOT,IAAQ,OAAOK,EAFxM,CAA8BI,EAAQM,GAAuB,GAAIZ,OAAOiB,sBAAuB,CAAE,IAAIC,EAAmBlB,OAAOiB,sBAAsBX,GAAS,IAAKH,EAAI,EAAGA,EAAIe,EAAiBb,OAAQF,IAAON,EAAMqB,EAAiBf,GAAQS,EAASG,QAAQlB,IAAQ,GAAkBG,OAAOO,UAAUY,qBAAqBV,KAAKH,EAAQT,KAAgBK,EAAOL,GAAOS,EAAOT,IAAU,OAAOK,EAMne,SAASkC,EAAaf,EAAMC,GAC1B,IAAIC,EAAQF,EAAKE,MACbC,EAAUH,EAAKG,QACfrF,EAAQ,EAAyBkF,EAAM,GAE3C,OAAoB,gBAAoB,MAAO,EAAS,CACtDI,MAAO,6BACPxC,MAAO,eACPC,OAAQ,eACRwC,QAAS,gCACTC,oBAAqB,gBACrBC,IAAKN,EACL,kBAAmBE,GAClBrF,GAAQoF,EAAqB,gBAAoB,QAAS,CAC3DM,GAAIL,GACHD,GAAS,KAAM,IAAO,EAAkB,gBAAoB,IAAK,CAClEO,UAAW,2DACXC,KAAM,eACNC,OAAQ,QACM,gBAAoB,OAAQ,CAC1CC,EAAG,8iCACY,gBAAoB,OAAQ,CAC3CA,EAAG,qEACY,gBAAoB,OAAQ,CAC3CA,EAAG,qEACY,gBAAoB,OAAQ,CAC3CA,EAAG,wVAIP,IC1CI,ED0CA,EAA0B,aAAiBG,GCxC3C,GDyCW,ICzCC,CAAC,QAAS,YAE1B,SAAS,IAA2Q,OAA9P,EAAWpC,OAAOC,QAAU,SAAUC,GAAU,IAAK,IAAIC,EAAI,EAAGA,EAAIC,UAAUC,OAAQF,IAAK,CAAE,IAAIG,EAASF,UAAUD,GAAI,IAAK,IAAIN,KAAOS,EAAcN,OAAOO,UAAUC,eAAeC,KAAKH,EAAQT,KAAQK,EAAOL,GAAOS,EAAOT,IAAY,OAAOK,IAA2BQ,MAAMzD,KAAMmD,WAEhT,SAAS,EAAyBE,EAAQM,GAAY,GAAc,MAAVN,EAAgB,MAAO,GAAI,IAAkET,EAAKM,EAAnED,EAEzF,SAAuCI,EAAQM,GAAY,GAAc,MAAVN,EAAgB,MAAO,GAAI,IAA2DT,EAAKM,EAA5DD,EAAS,GAAQW,EAAab,OAAOc,KAAKR,GAAqB,IAAKH,EAAI,EAAGA,EAAIU,EAAWR,OAAQF,IAAON,EAAMgB,EAAWV,GAAQS,EAASG,QAAQlB,IAAQ,IAAaK,EAAOL,GAAOS,EAAOT,IAAQ,OAAOK,EAFxM,CAA8BI,EAAQM,GAAuB,GAAIZ,OAAOiB,sBAAuB,CAAE,IAAIC,EAAmBlB,OAAOiB,sBAAsBX,GAAS,IAAKH,EAAI,EAAGA,EAAIe,EAAiBb,OAAQF,IAAON,EAAMqB,EAAiBf,GAAQS,EAASG,QAAQlB,IAAQ,GAAkBG,OAAOO,UAAUY,qBAAqBV,KAAKH,EAAQT,KAAgBK,EAAOL,GAAOS,EAAOT,IAAU,OAAOK,EAMne,SAASmC,EAAchB,EAAMC,GAC3B,IAAIC,EAAQF,EAAKE,MACbC,EAAUH,EAAKG,QACfrF,EAAQ,EAAyBkF,EAAM,GAE3C,OAAoB,gBAAoB,MAAO,EAAS,CACtDI,MAAO,6BACPxC,MAAO,eACPC,OAAQ,eACRwC,QAAS,8BACTC,oBAAqB,gBACrBC,IAAKN,EACL,kBAAmBE,GAClBrF,GAAQoF,EAAqB,gBAAoB,QAAS,CAC3DM,GAAIL,GACHD,GAAS,KAAM,IAAO,EAAkB,gBAAoB,IAAK,CAClEO,UAAW,2DACXC,KAAM,eACNC,OAAQ,QACM,gBAAoB,OAAQ,CAC1CC,EAAG,spCACY,gBAAoB,OAAQ,CAC3CA,EAAG,4aACY,gBAAoB,OAAQ,CAC3CA,EAAG,gLAIP,I,GAAI,GAA0B,aAAiBI,GC/BzCC,IDgCS,IChCFC,IAAMC,MAAsE,YAAgD,IACjI5E,EADgGpC,EAAgC,EAAhCA,UAAWY,EAAqB,EAArBA,QAASiB,EAAY,EAAZA,UAGxH,OAAQ7B,GACJ,KAAKG,IAAUqB,OACXY,EAAY6E,EACZ,MACJ,KAAK9G,IAAUkD,QACf,KAAKlD,IAAU+G,WACX9E,EAAY+E,EACZ,MACJ,KAAKhH,IAAUC,KACXgC,EAAYgF,EACZ,MACJ,KAAKjH,IAAUuB,IACXU,EAAYiF,GAIpB,OAAO,cAACjF,EAAD,CAAWP,UAAWA,EAAWjB,QAASA,QAGxC0G,GAASP,IAAMC,MAAkB,YAA8B,IAAbnF,EAAY,EAAZA,UAE3D,EAAsB0F,YAAsB3E,IAAgB4E,aAArDA,EAAP,oBACA,EAAkCD,YAAyB3E,IAAgB5C,WAA3E,mBAAOA,EAAP,KAAkB6C,EAAlB,KACA,EAAgB0E,YAAsB3E,IAAgB6E,OAA/CA,EAAP,oBAEA,OACI,sBAAK5F,UAAS,6BAAiBA,QAAjB,IAAiBA,IAAa,IAA5C,UACI,qBAAKA,UAAU,4BAAf,SAEQ7B,IAAcG,IAAUkD,SACxB,qBAAKxB,UAAU,mBAAf,SACK2F,MAIb,cAAC,GAAD,CAAM3F,UAAU,cAAc7B,UAAWA,EAAWY,QAAS,WACrDZ,IAAcG,IAAUkD,SAG5BR,EAAa1C,IAAUkD,YAE3B,qBAAKxB,UAAU,4BAAf,SAEQ7B,IAAcG,IAAUkD,SACxB,qBAAKxB,UAAU,mBAAf,SACK4F,Y,qECtDZC,GAAb,WACI,aAAuB,oBAD3B,sDAGI,WACI,IAAMC,EAAgBC,aAAaC,QAAQjF,IAAgBL,WAAWuF,YACtE,OAAsB,OAAlBH,EACO,KAEJI,KAAKC,MAAML,KAR1B,2BAWI,SAAqBM,GACjBL,aAAaM,QAAQtF,IAAgBL,WAAWuF,WAAYC,KAAKI,UAAUF,QAZnF,KCMaG,GAAiBrB,IAAMC,MAA0B,YAA+C,EAAtBnF,UAAuB,IAAD,MAAXwG,EAAW,EAAXA,SAC9F,EAAwBC,aAAWD,GAAnC,mBAAOE,EAAP,KAAaC,EAAb,KAEA,EAA6FjB,YAA0B3E,IAAgBL,YAAvI,0BAAekG,EAAf,EAAQhF,MAA2BiF,EAAnC,EAA2BhF,OAAgCiF,EAA3D,EAAgDhF,UAA4BnB,EAA5E,KACA,EAAkC+E,YAAyB3E,IAAgB5C,WAA3E,mBAAkB6C,GAAlB,WAEA,EAA0BP,mBAASmG,EAAWX,YAA9C,mBAAOrE,EAAP,KAAcmF,EAAd,KACA,EAAsCtG,mBAAwB,IAA9D,mBAAOuG,EAAP,KAAoBC,EAApB,KACA,EAA4BxG,mBAASoG,EAAYZ,YAAjD,mBAAOpE,EAAP,KAAeqF,EAAf,KACA,EAAwCzG,mBAAwB,IAAhE,mBAAO0G,EAAP,KAAqBC,EAArB,KACA,EAAkC3G,mBAASqG,EAAeb,YAA1D,mBAAOnE,EAAP,KAAkBuF,EAAlB,KACA,EAA8C5G,mBAAwB,IAAtE,mBAAO6G,EAAP,KAAwBC,EAAxB,KAEA,EAAwB9G,mBAAS+G,OAAO5F,GAAS4F,OAAO3F,IAAxD,mBAAO4F,EAAP,KAAaC,EAAb,KA8EA,SAASC,IACLhB,GAAQ,GAsBZ,OApGA1F,qBAAU,WACNyG,EAAQF,OAAO5F,GAAS4F,OAAO3F,MAChC,CAACD,EAAOC,IAmGP,eAAC+F,GAAA,EAAD,CAAQlB,KAAMA,EAAM1G,UAAU,sBAAsB6H,QAASF,EAA7D,UACI,cAACG,GAAA,EAAD,wCACA,eAACC,GAAA,EAAD,CAAe/H,UAAU,yBAAzB,UACI,cAACgI,GAAA,EAAD,CAAWC,MAAM,QACNjI,UAAU,2BACVnC,MAAO+D,EACPsG,SAvGvB,SAA2BjI,GACvB,IAAIkI,EAAWlI,EAAE4C,OAAOhF,MAExB,IAAKsK,EAGD,OAFAlB,EAAe,CAAC,gCAChBF,EAASoB,GAKbA,EAAWA,EAASC,QAAQ,UAAW,IACvCrB,EAASoB,GAET,IAAMtK,EAAQ2J,OAAOW,GACfE,EAAwB,GAE1BxK,EAAQ,EACRwK,EAAOC,KAAK,kCACLzK,EAAQ,KACfwK,EAAOC,KAAK,qCAGhBrB,EAAeoB,IAkFIE,QAASvB,EAAYhE,OACrBwF,WAAU,UAAExB,EAAY,UAAd,aAAoB5I,IACzC,cAAC4J,GAAA,EAAD,CAAWC,MAAM,SAASjI,UAAU,2BACzBnC,MAAOgE,EACPqG,SAnFvB,SAA4BjI,GACxB,IAAIkI,EAAWlI,EAAE4C,OAAOhF,MAExB,IAAKsK,EAGD,OAFAf,EAAgB,CAAC,gCACjBF,EAAUiB,GAIdA,EAAWA,EAASC,QAAQ,UAAW,IACvClB,EAAUiB,GAEV,IAAMtK,EAAQ2J,OAAOW,GACfE,EAAwB,GAE1BxK,EAAQ,EACRwK,EAAOC,KAAK,mCACLzK,EAAQ,KACfwK,EAAOC,KAAK,sCAGhBlB,EAAgBiB,IA+DGE,QAASpB,EAAanE,OACtBwF,WAAU,UAAErB,EAAa,UAAf,aAAqB/I,IAC1C,cAAC4J,GAAA,EAAD,CAAWC,MAAM,QACNjI,UAAU,2BACVnC,MAAOiE,EACPoG,SAjEvB,SAA+BjI,GAC3B,IAAIkI,EAAWlI,EAAE4C,OAAOhF,MAExB,IAAKsK,EAGD,OAFAZ,EAAmB,CAAC,gCACpBF,EAAac,GAIjBA,EAAWA,EAASC,QAAQ,UAAW,IACvCf,EAAac,GAEb,IAAMtK,EAAQ2J,OAAOW,GACfE,EAAwB,GAE1BxK,EAAQ,EACRwK,EAAOC,KAAK,sCACLzK,GAAS4J,GAChBY,EAAOC,KAAK,4DAGhBf,EAAmBc,IA6CAE,QAASjB,EAAgBtE,OACzBwF,WAAU,UAAElB,EAAgB,UAAlB,aAAwBlJ,OAEjD,eAACqK,GAAA,EAAD,WACI,cAACC,GAAA,EAAD,CAAQ3J,QAAS4I,EAAjB,oBAGA,cAACe,GAAA,EAAD,CAAQC,WAAY3B,EAAYhE,UAAYmE,EAAanE,UAAYsE,EAAgBtE,OAC7EjE,QA9CpB,WACI,KAAMiI,EAAYhE,QAAYmE,EAAanE,QAAYsE,EAAgBtE,QAAvE,CAGA,IAAM4F,EAA4B,CAC9BhH,MAAO4F,OAAO5F,GACdC,OAAQ2F,OAAO3F,GACfC,UAAW0F,OAAO1F,IAGtB+D,GAAalF,cAAciI,GAE3BjC,GAAQ,GAER3F,EAAa1C,IAAUkD,SACvBb,EAAciI,KA8BN,4BC9IHC,GAAW3D,IAAMC,MAAgB,YAAgC,IAAbnF,EAAY,EAAZA,UAC7D,EAAgCkF,IAAMzE,SAA6B,MAAnE,mBAAOqI,EAAP,KAAiBC,EAAjB,KACMrC,EAAOsC,QAAQF,GAErB,EAAyBrI,oBAAS,kBAAM,IAAIwI,MAAiB,MAAtDC,EAAP,oBAQA,OACI,eAACC,EAAA,EAAD,CAAOnJ,UAAS,2BAAeA,QAAf,IAAeA,IAAa,IAA5C,UACI,cAAC,GAAD,CAAQA,UAAU,kBAClB,sBAAKA,UAAU,mBAAf,UACI,cAACoJ,EAAA,EAAD,CAAYrK,QAVJ,SAACsK,GACjBN,EAAYM,EAAMC,gBASV,SACI,cAACC,EAAA,EAAD,MAEJ,cAACC,EAAA,EAAD,CAAMV,SAAUA,EACVpC,KAAMA,EACNmB,QAZE,WAChBkB,EAAY,OAYEU,aAAc,CACVC,SAAU,MACVC,WAAY,SAEhBC,gBAAiB,CACbF,SAAU,MACVC,WAAY,SATtB,SAYI,cAACE,EAAA,EAAD,CAAU9K,QAAS,WACfmK,EAAeY,MAAK,GACpBf,EAAY,OAFhB,2BAQR,cAAC,GAAD,CAAgBvC,SAAU0C,U,UClCtCrI,IACKkJ,SAAShJ,IAAgB6E,MAAO,GAChCmE,SAAShJ,IAAgB4E,YAAa,GACtCoE,SAAShJ,IAAgB5C,UAAWG,IAAUkD,SAC9CuI,SAAShJ,IAAgBL,WAJ9B,WAI0CmF,GAAamE,uBAJvD,UCN6C,CACzCpI,MAAO,GACPC,OAAQ,GACRC,UAAW,KDmBAmI,OATf,WACI,OACI,eAACC,GAAA,EAAD,CAAsBC,aAAW,EAAjC,UACI,cAAC,GAAD,IACA,cAAC,EAAD,QETGC,GAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,MAEFC,SAASC,eAAe,SAM1Bb,M,gCChBO,IAAK9L,EAAZ,kC,SAAYA,K,gBAAAA,E,YAAAA,E,UAAAA,E,kBAAAA,E,yBAAAA,M,sCCCL,IAAK4M,EAKAC,EAcApN,EAaAqN,EAeL,SAAStN,EAAYuN,GACxB,OAAOA,EAAM,GAGV,SAASC,EAAgBD,GAC5B,OAAOA,GAAO,IAAMA,EAAM,GAGvB,SAAS3M,EAAgB2M,GAC5B,OAAOA,GAAO,GAGX,SAAS7M,EAAO6M,GACnB,OAAOA,IAAQF,EAAUnN,MAAQqN,IAAQtN,EAAcC,MAAQqN,IAAQD,EAAcpN,KA5DzF,4M,SAAYkN,O,mBAAAA,I,gBAAAA,M,cAKAC,O,4BAAAA,I,iBAAAA,I,aAAAA,I,aAAAA,I,iBAAAA,I,eAAAA,I,eAAAA,I,aAAAA,I,iBAAAA,I,iBAAAA,I,gBAAAA,M,cAcApN,O,kBAAAA,I,cAAAA,I,cAAAA,I,kBAAAA,I,gBAAAA,I,gBAAAA,I,cAAAA,I,kBAAAA,I,kBAAAA,I,iBAAAA,M,cAaAqN,O,kBAAAA,I,cAAAA,I,cAAAA,I,kBAAAA,I,gBAAAA,I,gBAAAA,I,cAAAA,I,kBAAAA,I,kBAAAA,I,iBAAAA,M,sCCjCZ,kCAAO,IAAMrK,EAAkB,CAC3B6E,MAAO2F,OAAO,SACd5F,YAAa4F,OAAO,eACpBpN,UAAWoN,OAAO,aAClBC,SAAUD,OAAO,YACjB7K,WAAY6K,OAAO,gB,gIC8BV1K,EAAW,I,WA5BpB,aAAe,yBAFP4K,cAAgB,IAAIC,IAGxB9L,KAAKmK,SAAWnK,KAAKmK,SAAS4B,KAAK/L,MACnCA,KAAKgM,WAAahM,KAAKgM,WAAWD,KAAK/L,M,4CAG3C,SAAY4C,EAAeqJ,GAGvB,OAFAjM,KAAK6L,cAAcK,IAAItJ,EAAK,IAAIyG,IAAQ4C,IAEjCjM,O,wBAGX,SAAW4C,GACP,OAAO5C,KAAK6L,cAAcM,OAAOvJ,K,wBAGrC,SAAcA,GACV,IAAK5C,KAAK6L,cAAcO,IAAIxJ,GACxB,MAAM,IAAIyJ,MAAJ,kCAAqCzJ,EAAIyD,WAAzC,qCAGV,OAAOrG,KAAK6L,cAAcS,IAAI1J,K,sBAGlC,SAAYA,GACR,OAAO5C,KAAKuB,WAAcqB,GAAK3E,U,MAchC,SAAS6H,EAAiBlD,GAC7B,OAAOiE,YAAc5F,EAASM,WAAWqB,M,uIC5ChCyG,EAAb,WAII,WAAoBkD,GAAY,yBAAZA,SAAW,KAHvBC,YAAc,IAAIV,IAGK,KAFvBW,aAAe,EAF3B,uCAOI,WACI,OAAOzM,KAAKuM,SARpB,kBAWI,SAAKtO,GACD+B,KAAKuM,OAAStO,EAEd+B,KAAKwM,YAAYE,SAAQ,SAACC,GAAD,OAAcC,gBAAe,kBAAMD,EAAS1O,WAd7E,sBAkBI,WACI+B,KAAKwM,YAAYK,UAnBzB,uBAsBI,SAAU3C,GAA0D,IAAD,OAAjC4C,EAAiC,wDACzDC,EAAQ/M,KAAKyM,aAQnB,OAPAzM,KAAKyM,cAAgB,EACrBzM,KAAKwM,YAAYN,IAAIa,EAAO7C,GAEvB4C,GACDF,gBAAe,kBAAM1C,EAAK,EAAKqC,WAG5B,CACH7K,YAAa,WACT,EAAK8K,YAAYL,OAAOY,SAjCxC,KA+CO,SAASlG,EAAcmG,GAA+D,IAA1CF,IAAyC,yDACxF,EAA0BjM,mBAASmM,EAAQ/O,OAA3C,mBAAOA,EAAP,KAAcgP,EAAd,KAOA,OALA5L,qBAAU,WACN,IAAMS,EAAMkL,EAAQxL,UAAUyL,EAAUH,GACxC,OAAO,kBAAMhL,EAAIJ,iBAClB,IAEI,CAACzD,EAAO,SAACwN,GAAD,OAAYuB,EAAQ9C,KAAKuB,O,oMC3C/BtJ,EAAb,WAqBI,WAAYH,EAAeC,EAAgBiL,GAAoD,IAAD,OAAnBC,EAAmB,uDAAH,EAAG,yBAAnBA,gBAAmB,KApB9EtF,UAoB8E,OAnB7EuF,kBAmB6E,OAjB7EC,UAiB6E,OAhB7EC,YAgB6E,OAf7EC,aAe6E,OAd7EC,qBAc6E,OAb7EC,oBAa6E,OAZ7EC,WAAa,IAAIC,MAY4D,KAX7EC,kBAAoB,IAAID,MAWqD,KAV7E3H,MAAe,IAAI6H,IAAM5M,IAASM,WAAWJ,IAAgB6E,QAUgB,KAT7E8H,eAAiB,IAAIC,IASwD,KAR7EC,cAAgB/M,IAASM,WAAmBJ,IAAgB4E,aAQiB,KAP7ExH,UAAY0C,IAASM,WAAsBJ,IAAgB5C,WAOkB,KAN7E0P,qBAM6E,OALtFC,YAAsB,EAKgE,KAJtFC,oBAIsF,OAFtFC,WAAY,EAGhBpO,KAAKsN,OAAStL,EACdhC,KAAKuN,QAAUtL,EACfjC,KAAKwN,gBAAkBN,EAEvBlN,KAAK6H,KAAO7F,EAAQC,EAEpBjC,KAAKyN,eAAiBzN,KAAK6H,KAG3B7H,KAAKiO,gBAAkB,IAAI5E,IAAQrJ,KAAK6H,KAAO7H,KAAKwN,iBACpDxN,KAAKiO,gBAAgBzM,WAAU,SAAAiK,GACf,IAARA,IAGJ,EAAKlN,UAAU2L,KAAKxL,IAAUuB,KAC9B,EAAK+N,cAAc9D,KAAK,GACxB,EAAKlE,MAAMqI,WAIfrO,KAAKoN,aAAe,IAAIkB,kBAAkBtO,KAAKyN,gBAG/CzN,KAAKqN,KAAO,IAAIkB,UAAUvO,KAAKoN,cAG/BpN,KAAKqN,KACAvI,KAAKyG,IAAUnN,KAAM,EAAG8O,GACxBpI,KAAKyG,IAAUiD,WAAYtB,GAGhC,IAAK,IAAIhK,EAAI,EAAGA,EAAIlD,KAAKmN,cAAejK,IAAK,CACzC,IAAMuL,EAAS,IAAIC,OAAO,EAA2B,CAACC,KAAK,wBAAD,OAA0BzL,GAAK0L,UAAKA,IACxFC,EAAeC,YAAwBL,GAC7CI,EAAa7N,OAAOhB,KAAKoN,cACzBpN,KAAK0N,WAAWhF,KAAKmG,GACrB7O,KAAK4N,kBAAkBlF,KAAK+F,IA1DxC,2CAiEI,WACQzO,KAAKoO,YAITpO,KAAK0N,WAAWhB,SAAQ,SAAAqC,GAAS,OAAIA,EAAUC,UAC/ChP,KAAK4N,kBAAkBlB,SAAQ,SAAA+B,GAAM,OAAIA,EAAOQ,eAChDjP,KAAKgG,MAAM6G,QACX7M,KAAKgO,cAAc9D,KAAK,GAExBlK,KAAKoO,WAAY,KA3EzB,6DAiFI,uCAAAc,EAAA,6DACUC,EAAKC,YAAYC,MAD3B,SAGoBC,QAAQC,IAAIvP,KAAK0N,WAAWrO,KAAI,SAAC0P,EAAWhC,GAAZ,OAAsBgC,EAAUS,YAAYzC,EAAO,EAAKI,mBAH5G,cAMIsC,GAHIA,EAHR,QAMcC,QAAO,SAAAjE,GAAG,YAAYjN,IAARiN,KACxBzL,KAAKmO,eAAiBsB,EAAIE,KAAKC,MAAMD,KAAKE,UAAYJ,EAAIrM,OAAS,UAEvC5E,IAAxBwB,KAAKmO,gBAAgCnO,KAAKqN,KAAKrN,KAAKqN,KAAKjK,OAAS,KAAOmI,IAAUiD,aACnFxO,KAAKmO,eAAiBnO,KAAKqN,KAAKjK,OAAS,GAVjD,SAeUpD,KAAK8P,2BAA2B,CAACC,MAAO,EAAGC,IAAKhQ,KAAKsN,OAAS,GAAI,CAACyC,MAAO,EAAGC,IAAKhQ,KAAKuN,QAAU,IAf3G,OAgBU0C,EAAKb,YAAYC,MACvBa,QAAQC,IAAR,2BAAgCF,EAAKd,EAArC,mBAGAnP,KAAKgG,MAAM+J,QACX/P,KAAKgO,cAAc9D,KAAKlK,KAAKwN,iBAC7BxN,KAAKzB,UAAU2L,KAAKxL,IAAUqB,QAtBlC,iDAjFJ,uFA+GI,SAAoBT,EAAqBC,GAAmD,IAAD,OACvF,OAAO,WAEH,GAAI,EAAKhB,UAAUN,QAAUS,IAAUqB,OAAvC,CAIA,IAAIqQ,EAAY,EAAKzQ,eAAeL,EAAaC,GAEjD,QAAkBf,IAAd4R,IAA2B1E,YAAgB0E,KAActR,YAAgBsR,GAA7E,CAWA,GAPI,EAAKlC,YAAckC,IAAc7E,IAAUnN,OAC3CgS,EAAY,EAAKC,qBAAqB/Q,EAAaC,EAAU6Q,IAGjE,EAAKlC,YAAa,EAGdkC,IAAc7E,IAAUnN,KAGxB,OAFA,EAAK4H,MAAMqI,YACX,EAAK9P,UAAU2L,KAAKxL,IAAUC,MAKlC,GAAIyR,IAAc7E,IAAUlN,MAAO,CAC/B,IAAMiS,EAAeF,EAAY,GAOjC,OANA,EAAKG,eAAejR,EAAaC,EAAU+Q,GAC3C,EAAKrC,gBAAgB/D,KAAK,EAAK+D,gBAAgBhQ,MAAQ,GAEnD,EAAKM,UAAUN,QAAUS,IAAU+G,YACnC,EAAKlH,UAAU2L,KAAKxL,IAAUqB,QAE3BuQ,EAIX,EAAK/R,UAAU2L,KAAKxL,IAAU+G,YAC9B,IAAM0J,EAAKC,YAAYC,MACvB,EAAKmB,UAAU,CAAClR,cAAaC,aAAWoL,MAAK,SAAC8F,GAC1C,EAAKxC,gBAAgB/D,KAAK,EAAK+D,gBAAgBhQ,MAAQwS,GACvDP,QAAQC,IAAR,kCAAuCf,YAAYC,MAAQF,EAA3D,MACA,EAAK5Q,UAAU2L,KAAKxL,IAAUqB,gBA3J9C,uCAqKI,SAA0BT,EAAqBC,GAAmD,IAAD,OAC7F,OAAO,WACH,GAAI,EAAKhB,UAAUN,QAAUS,IAAUqB,OAAvC,CAIA,IAAMqQ,EAAY,EAAKzQ,eAAeL,EAAaC,GACnD,QAAkBf,IAAd4R,IAA2B1E,YAAgB0E,GAA/C,CAIA,IAAIE,EAEJ,GAAIxR,YAAgBsR,GAAY,CAC5B,GAAI,EAAKpC,cAAc/P,QAAU,EAAKuP,gBAClC,OAEJ8C,EAAeF,EAAY,GAC3B,EAAKG,eAAejR,EAAaC,EAAU+Q,GAC3C,EAAKtC,cAAc9D,KAAK,EAAK8D,cAAc/P,MAAQ,OAChD,CACH,GAAiC,IAA7B,EAAK+P,cAAc/P,MACnB,OAEJqS,EAAeF,EAAY,GAC3B,EAAKG,eAAejR,EAAaC,EAAU+Q,GAC3C,EAAKtC,cAAc9D,KAAK,EAAK8D,cAAc/P,MAAQ,GAGvD,OAAOqS,OAlMnB,sBA2MI,SAAShR,EAAqBC,GAC1B,KAAID,EAAc,GAAKA,GAAeU,KAAKsN,WAGvC/N,EAAW,GAAKA,GAAYS,KAAKuN,SAGrC,OAAOvN,KAAKuN,QAAUhO,EAAWD,IAlNzC,4BAqNI,SAAeA,EAAqBC,GAChC,QAAoBf,IAAhBc,QAA0Cd,IAAbe,EAIjC,OAAOS,KAAKhC,aAAagC,KAAKuN,QAAUhO,EAAWD,KA1N3D,4BA6NI,SAAeA,EAAqBC,EAAkBtB,GAClD,OAAO+B,KAAK0Q,aAAa1Q,KAAKuN,QAAUhO,EAAWD,EAAarB,KA9NxE,0BAiOI,SAAa8O,EAAe9O,GACxB0S,QAAQC,MAAM5Q,KAAKqN,KAAMN,EAAO9O,KAlOxC,0BAqOI,SAAa8O,GACT,OAAO4D,QAAQE,KAAK7Q,KAAKqN,KAAMN,KAtOvC,+EA8OI,WAAiC+D,EAA6CC,GAA9E,wBAAA7B,EAAA,6DACUC,EAAKC,YAAYC,MAD3B,SAEUC,QAAQC,IACVvP,KAAK0N,WAAWrO,KAAI,SAAC0P,EAAWhC,GAC5B,OAAOgC,EAAUe,2BACb,EAAKxC,OACL,EAAKC,QACLuD,EACAC,EACAhE,OAThB,OAaUkD,EAAKb,YAAYC,MACvBa,QAAQC,IAAR,8BAAmCF,EAAKd,IAd5C,gDA9OJ,2FAsQI,SAA6B7P,EAAqBC,EAAkB6Q,GAAwC,IAAD,OACvG,IAAKpQ,KAAKmO,eACN,OAAOiC,EAEXpQ,KAAKzB,UAAU2L,KAAKxL,IAAU+G,YAG9BzF,KAAK0Q,aAAa1Q,KAAKmO,eAAgB5C,IAAUnN,MAEjD4B,KAAKuQ,eAAejR,EAAaC,EAAUS,KAAKgR,oBAAoB1R,EAAaC,IAEjF6Q,EAAYpQ,KAAKL,eAAeL,EAAaC,GAE7CS,KAAKiR,kBAAkB3R,EAAaC,GAC/BmN,SAAQ,SAACwE,GACN,QAAkB1S,IAAd0S,EAAJ,CAIA,IAAIC,EAAiB,EAAKnT,aAAakT,GAEnCtS,YAAOuS,IAIX,EAAKT,aAAaQ,EAAWC,EAAiB,OAItD,IAAMC,EAAepR,KAAKmO,eAAiBnO,KAAKsN,OAC1C+D,GAAgBrR,KAAKmO,eAAiBiD,GAAgBpR,KAAKsN,OAgBjE,OAdAtN,KAAKiR,kBAAkBG,EAAcC,GAChC3E,SAAQ,SAACwE,GACN,QAAkB1S,IAAd0S,EAAJ,CAIA,IAAIC,EAAiB,EAAKnT,aAAakT,GAEnCtS,YAAOuS,IAIX,EAAKT,aAAaQ,EAAWC,EAAiB,OAE/Cf,IApTf,iCA6TI,SAA4B9Q,EAAqBC,GAC7C,OAAOyR,YAAoBhR,KAAKqN,KAAM/N,EAAaC,EAAUS,KAAKsN,OAAQtN,KAAKuN,WA9TvF,8DAyUI,WAAwB+D,GAAxB,sFACUvE,EAAQ/M,KAAKuR,SAASD,EAAUhS,YAAagS,EAAU/R,UAEvDD,EAAcyN,EAAQ/M,KAAKsN,OAC3B/N,GAAYwN,EAAQzN,GAAeU,KAAKsN,OAJlD,SAQQ8C,EAAYpQ,KAAKhC,aAAa+O,GARtC,yEAUe,GAVf,aAYQqD,GAAa,IAZrB,0CAae,GAbf,WAgBIpQ,KAAK0Q,aAAa3D,EAAOqD,EAAY,IAEjCA,IAAc7E,IAAUlN,MAlBhC,0CAmBe,GAnBf,eAsBUmT,EAAaxR,KAAKiR,kBAAkB3R,EAAaC,GAAUmQ,QAAO,SAAAwB,GAAS,YAAkB1S,IAAd0S,KAtBzF,UAwBkB5B,QAAQC,IAAIiC,EAAWnS,KAAI,SAAC6R,EAAWO,GACjD,IAAMC,EAAiBD,EAAiB,EAAKtE,cACvC7N,EAAc4R,EAAY,EAAK5D,OAC/B/N,GAAY2R,EAAY5R,GAAe,EAAKgO,OAElD,OAAO,EAAKI,WAAWgE,GAAgBlB,UAAU,EAAKlD,OAAQ,EAAKC,QAASjO,EAAaC,OA7BjG,2BA8BSoS,QAAO,SAACC,EAAKnG,GAAN,OAAcmG,EAAMnG,KA9BpC,uBA8B2C,GA9B3C,yDAzUJ,sFAgXI,SAA0BnM,EAAqBC,GAC3C,MAAO,CACHS,KAAKuR,SAASjS,EAAc,EAAGC,EAAW,GAC1CS,KAAKuR,SAASjS,EAAc,EAAGC,EAAW,GAC1CS,KAAKuR,SAASjS,EAAc,EAAGC,EAAW,GAC1CS,KAAKuR,SAASjS,EAAc,EAAGC,EAAW,GAC1CS,KAAKuR,SAASjS,EAAaC,EAAW,GACtCS,KAAKuR,SAASjS,EAAaC,EAAW,GACtCS,KAAKuR,SAASjS,EAAc,EAAGC,GAC/BS,KAAKuR,SAASjS,EAAc,EAAGC,QAzX3C,O,yGCZasO,EAAb,WAII,WAAoBgE,GAAgC,yBAAhCA,eAA+B,KAH3C1C,GAAaC,YAAYC,MAGkB,KAF3CyC,gBAE2C,EAJvD,4CAOI,WACI,OAAOnC,KAAKC,OAAOR,YAAYC,MAAQrP,KAAKmP,IAAM,OAR1D,mBAWI,WAAS,IAAD,OACJnP,KAAK6M,QACL7M,KAAKmP,GAAKC,YAAYC,MAItBrP,KAAK8R,WAAaC,aAAY,WACP,EAAKC,WACP,KAGjB,EAAKH,aAAa3H,KAAK,EAAK8H,cAC7B,OAvBX,kBA0BI,WACIC,cAAcjS,KAAK8R,cA3B3B,mBA8BI,WACI9R,KAAK6R,aAAa3H,KAAK,GACvB+H,cAAcjS,KAAK8R,gBAhC3B,M,gCCFA,8CAEO,SAASd,EAAoB3R,EAAgBC,EAAqBC,EAAkByC,EAAeC,GAEtG,IAAIiQ,EAAU,EAERnF,EAAQ9K,EAAS1C,EAAWD,EAC5B6S,EAAS7S,EACT8S,EAAM7S,EAsCZ,OApCe,IAAX4S,GAAgB9S,EAAI0N,EAAQ,KAAOxB,IAAUnN,MAC7C8T,IAGAC,IAAWnQ,EAAQ,GAAK3C,EAAI0N,EAAQ,KAAOxB,IAAUnN,MACrD8T,IAGQ,IAARE,GAAa/S,EAAI0N,EAAQ/K,KAAWuJ,IAAUnN,MAC9C8T,IAGAE,IAAQnQ,GAAU5C,EAAI0N,EAAQ/K,KAAWuJ,IAAUnN,MACnD8T,IAGW,IAAXC,IACY,IAARC,GAAa/S,EAAI0N,EAAQ/K,EAAQ,KAAOuJ,IAAUnN,MAClD8T,IAGAE,IAAQnQ,GAAU5C,EAAI0N,EAAQ/K,EAAQ,KAAOuJ,IAAUnN,MACvD8T,KAIJC,IAAWnQ,EAAQ,IACP,IAARoQ,GAAa/S,EAAI0N,EAAQ/K,EAAQ,KAAOuJ,IAAUnN,MAClD8T,IAGAE,IAAQnQ,GAAU5C,EAAI0N,EAAQ/K,EAAQ,KAAOuJ,IAAUnN,MACvD8T,KAIDA,I,sFC9CEG,EACT,WAAmBpU,GAAyD,IAAxCiM,EAAuC,uDAAN,KAAM,yBAAxDjM,QAAwD,KAAvCiM,QCC3B6D,EAAb,iDACYuE,KAAiC,KAD7C,KAEYC,KAAiC,KAF7C,KAIYC,MAAgB,EAJ5B,sCAKI,WACI,OAAOxS,KAAKwS,QANpB,qBASI,WACI,OAAQxS,KAAKsS,OAVrB,kBAaI,WACI,OAAItS,KAAKyS,UACE,KAGJzS,KAAKsS,KAAMrU,QAlB1B,qBAqBI,SAAQA,GACJ,IAAMyU,EAAW,IAAIL,EAAepU,GAIpC,OAFA+B,KAAKwS,QAEDxS,KAAKyS,WACLzS,KAAKuS,KAAOG,EACZ1S,KAAKsS,KAAOI,EAEL1S,OAGXA,KAAKuS,KAAMrI,KAAOwI,EAClB1S,KAAKuS,KAAOG,EAEL1S,QApCf,qBAuCI,WACI,GAAIA,KAAKyS,UACL,OAAO,KAEX,IAAMxU,EAAQ+B,KAAKsS,KAAMrU,MAGzB,OAFA+B,KAAKsS,KAAOtS,KAAKsS,KAAMpI,KACvBlK,KAAKwS,QACEvU,MA9Cf,O","file":"static/js/main.82dd039a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/js/0.f44a241c.chunk.worker.js\"","import React, {Component, CSSProperties} from \"react\";\r\nimport {CellValue, CellValueOpen, isCellValue, isCellValueFlag, isMine, MapCellValue} from \"../../core/map/types/cell\";\r\nimport {GolfCourse} from \"@material-ui/icons\";\r\nimport {GameState} from \"../../core/store/types/gameState\";\r\nimport {MinesweeperMap} from \"../../core/map/minesweeperMap\";\r\n\r\nenum CellColor {\r\n    closed = 'gray',\r\n    openMine = 'red',\r\n    openEmpty = 'white'\r\n}\r\n\r\nfunction getCellValue(value: CellValue | CellValueOpen | undefined): CellValue | undefined {\r\n    if (!value || isCellValue(value)) {\r\n        return;\r\n    }\r\n\r\n    if (value === CellValueOpen.mine || value === CellValueOpen.empty) {\r\n        return;\r\n    }\r\n\r\n    return value - 10;\r\n}\r\n\r\nfunction getCellColor(value: MapCellValue | undefined, gameState: GameState): CellColor {\r\n    if (value === undefined) {\r\n        return CellColor.openEmpty;\r\n    }\r\n\r\n    if (gameState === GameState.Lost && isMine(value)) {\r\n        return CellColor.openMine;\r\n    }\r\n\r\n    if (isCellValue(value) || isCellValueFlag(value)) {\r\n        return CellColor.closed;\r\n    }\r\n\r\n    if (isMine(value)) {\r\n        return CellColor.openMine;\r\n    }\r\n\r\n    return CellColor.openEmpty;\r\n}\r\n\r\nexport class Cell extends Component<CellProps, { value?: MapCellValue }> {\r\n\r\n    private readonly onClick: () =>  MapCellValue | undefined;\r\n    private readonly onContextMenu: () =>  MapCellValue | undefined;\r\n\r\n    constructor(props: CellProps) {\r\n        super(props);\r\n\r\n        const {map, columnIndex, rowIndex} = this.props;\r\n\r\n        this.onClick = map.getCellClickHandler(columnIndex, rowIndex);\r\n        this.onContextMenu = map.getCellContextMenuHandler(columnIndex, rowIndex);\r\n\r\n        this.state = {\r\n            value: map.getCellValueXY(columnIndex, rowIndex)\r\n        }\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps: Readonly<CellProps>, nextState: Readonly<{ value: MapCellValue }>, nextContext: any): boolean {\r\n        if (nextProps.gameState === GameState.InGame) {\r\n           return  nextState.value !== this.state.value;\r\n        }\r\n\r\n        return (nextProps.gameState === GameState.Won || nextProps.gameState === GameState.Lost) && isMine(nextState.value);\r\n    }\r\n\r\n    static getDerivedStateFromProps(nextProps: CellProps, prevState: {value: MapCellValue}) {\r\n        const {\r\n            columnIndex,\r\n            rowIndex,\r\n            gameState,\r\n            map\r\n        } = nextProps;\r\n        if (!(gameState === GameState.InGame || gameState === GameState.Won || gameState === GameState.Lost)) {\r\n            return null;\r\n        }\r\n\r\n        return {\r\n            value: map.getCellValueXY(columnIndex, rowIndex)\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n        const {\r\n            style,\r\n            gameState\r\n        } = this.props;\r\n\r\n        const {value} = this.state;\r\n\r\n        if (value === undefined) {\r\n            return <div style={{...style, backgroundColor: \"white\"}}/>\r\n        }\r\n\r\n\r\n        return (\r\n            <div className={`Cell-root`}\r\n                 style={{\r\n                     ...style,\r\n                     backgroundColor: getCellColor(value, gameState)\r\n                 }}\r\n                 onClick={(e) => {\r\n                     const newValue = this.onClick();\r\n                     if (newValue !== undefined && newValue !== value) {\r\n                         this.setState({value: newValue});\r\n                     }\r\n                 }}\r\n                 onContextMenu={(e) => {\r\n                     e.preventDefault();\r\n\r\n                     const newValue = this.onContextMenu();\r\n                     if (newValue !== undefined && newValue !== value) {\r\n                         this.setState({value: newValue});\r\n                     }\r\n                 }}>\r\n                {\r\n                    value && (isCellValueFlag(value) || (gameState === GameState.Won && isMine(value)))\r\n                        ? <GolfCourse/>\r\n                        : getCellValue(value)\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\ninterface CellProps {\r\n    gameState: GameState;\r\n    style: CSSProperties;\r\n    map: MinesweeperMap;\r\n    columnIndex: number;\r\n    rowIndex: number;\r\n}\r\n\r\n","var _g;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgHappy(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: \"545.000000pt\",\n    height: \"555.000000pt\",\n    viewBox: \"0 103 400.000000 200.000000\",\n    preserveAspectRatio: \"xMidYMid meet\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    transform: \"translate(0.000000,865.000000) scale(0.100000,-0.100000)\",\n    fill: \"currentColor\",\n    stroke: \"none\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1440 8530 l0 -120 -240 0 -240 0 0 -120 0 -120 -120 0 -120 0 0 -120 0 -120 -120 0 -120 0 0 -120 0 -120 -120 0 -120 0 0 -240 0 -240 -120 0 -120 0 0 -600 0 -600 120 0 120 0 0 -240 0 -240 120 0 120 0 0 -120 0 -120 120 0 120 0 0 -120 0 -120 120 0 120 0 0 -120 0 -120 240 0 240 0 0 -120 0 -120 605 0 605 0 0 120 0 120 240 0 240 0 0 120 0 120 120 0 120 0 0 120 0 120 120 0 120 0 0 120 0 120 120 0 120 0 0 240 0 240 120 0 120 0 0 600 0 600 -120 0 -120 0 0 240 0 240 -120 0 -120 0 0 120 0 120 -120 0 -120 0 0 120 0 120 -120 0 -120 0 0 120 0 120 -240 0 -240 0 0 120 0 120 -605 0 -605 0 0 -120z m1200 -240 l0 -120 240 0 240 0 0 -120 0 -120 120 0 120 0 0 -120 0 -120 120 0 120 0 0 -240 0 -240 120 0 120 0 0 -600 0 -600 -120 0 -120 0 0 -240 0 -240 -120 0 -120 0 0 -120 0 -120 -120 0 -120 0 0 -120 0 -120 -240 0 -240 0 0 -120 0 -120 -600 0 -600 0 0 120 0 120 -240 0 -240 0 0 120 0 120 -120 0 -120 0 0 120 0 120 -120 0 -120 0 0 240 0 240 -120 0 -120 0 0 600 0 600 120 0 120 0 0 240 0 240 120 0 120 0 0 120 0 120 120 0 120 0 0 120 0 120 240 0 240 0 0 120 0 120 600 0 600 0 0 -120z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1200 7450 l0 -240 240 0 240 0 0 240 0 240 -240 0 -240 0 0 -240z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M2400 7450 l0 -240 240 0 240 0 0 240 0 240 -240 0 -240 0 0 -240z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M960 6130 l0 -120 120 0 120 0 0 -120 0 -120 120 0 120 0 0 -120 0 -120 600 0 600 0 0 120 0 120 120 0 120 0 0 120 0 120 120 0 120 0 0 120 0 120 -120 0 -120 0 0 -120 0 -120 -120 0 -120 0 0 -120 0 -120 -600 0 -600 0 0 120 0 120 -120 0 -120 0 0 120 0 120 -120 0 -120 0 0 -120z\"\n  }))));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgHappy);\nexport default __webpack_public_path__ + \"static/media/happy.723f4728.svg\";\nexport { ForwardRef as ReactComponent };","import React, {useEffect, useState} from \"react\";\r\nimport {MinesweeperMap} from \"../../core/map/minesweeperMap\";\r\nimport {Cell} from \"../cell/Cell\";\r\nimport {AutoSizer, Grid} from \"react-virtualized\";\r\nimport {appStore} from \"../../core/store/store\";\r\nimport {AppStoreEntries} from \"../../core/store/types/appStore\";\r\nimport {MapOptions} from \"../../core/store/types/mapOptions\";\r\nimport {Subject} from \"../../core/subject\";\r\nimport {GameState} from \"../../core/store/types/gameState\";\r\n\r\nexport const Field = /*React.memo(*/function Field() {\r\n    const [mapOptions, setMapOptions] = useState<MapOptions | undefined>();\r\n    const [map, setMap] = useState<MinesweeperMap | undefined>(undefined);\r\n    const [gameState, setGameState] = useState(appStore.getValue(AppStoreEntries.gameState) as GameState);\r\n\r\n    useEffect(() => {\r\n        const gameStateSub = (appStore.getSubject(AppStoreEntries.gameState) as Subject<GameState>).subscribe(newGameState => {\r\n            setGameState(newGameState);\r\n        })\r\n\r\n        return () => {\r\n            gameStateSub.unsubscribe();\r\n        }\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        let newMap: MinesweeperMap | undefined;\r\n\r\n        if (gameState === GameState.Loading) {\r\n            map?.destroy();\r\n            setMap(undefined);\r\n            const sub = (appStore.getSubject(AppStoreEntries.mapOptions) as Subject<MapOptions>).subscribe(newOptions => {\r\n                sub.unsubscribe();\r\n\r\n                const {width, height, mineCount} = newOptions;\r\n                map?.destroy();\r\n                newMap = new MinesweeperMap(width, height, mineCount);\r\n                setMap(newMap)\r\n                setMapOptions(newOptions);\r\n                newMap.generate();\r\n            })\r\n        }\r\n    }, [gameState])\r\n\r\n    if (!map  || !mapOptions || gameState === GameState.Loading) {\r\n        return <></>;\r\n    }\r\n\r\n    const {width, height} = mapOptions;\r\n    return (\r\n        <>\r\n            <div>\r\n                <AutoSizer style={{width: '100%', height: 'calc(100vh - 75px)'}}>\r\n                    {\r\n                        ({width: gridWidth, height: gridHeight}) => (<>\r\n                            <Grid\r\n                                rowCount={height}\r\n                                columnCount={width}\r\n                                rowHeight={25}\r\n                                height={gridHeight}\r\n                                width={gridWidth}\r\n                                columnWidth={25}\r\n                                cellRenderer={({columnIndex, rowIndex, key, style}) => {\r\n                                    return (\r\n                                        <Cell style={style}\r\n                                              key={key}\r\n                                              gameState={gameState}\r\n                                              map={map!}\r\n                                              columnIndex={columnIndex}\r\n                                              rowIndex={rowIndex}\r\n                                        />)\r\n                                }}\r\n                            />\r\n                        </>)\r\n                    }\r\n                </AutoSizer>\r\n            </div>\r\n        </>\r\n    );\r\n}/*)*/;\r\n","var _g;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgSad(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: \"550pt\",\n    height: \"545pt\",\n    viewBox: \"506 460 400 400\",\n    preserveAspectRatio: \"xMidYMid meet\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    transform: \"translate(0.000000,865.000000) scale(0.100000,-0.100000)\",\n    fill: \"currentColor\",\n    stroke: \"none\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M6480 3970 l0 -120 -240 0 -240 0 0 -120 0 -120 -120 0 -120 0 0 -120 0 -120 -120 0 -120 0 0 -120 0 -120 -120 0 -120 0 0 -240 0 -240 -120 0 -120 0 0 -600 0 -600 120 0 120 0 0 -240 0 -240 120 0 120 0 0 -120 0 -120 120 0 120 0 0 -120 0 -120 120 0 120 0 0 -120 0 -120 240 0 240 0 0 -120 0 -120 605 0 605 0 0 120 0 120 240 0 240 0 0 120 0 120 120 0 120 0 0 120 0 120 120 0 120 0 0 120 0 120 120 0 120 0 0 240 0 240 120 0 120 0 0 600 0 600 -120 0 -120 0 0 240 0 240 -120 0 -120 0 0 120 0 120 -120 0 -120 0 0 120 0 120 -120 0 -120 0 0 120 0 120 -240 0 -240 0 0 120 0 120 -605 0 -605 0 0 -120z m1200 -240 l0 -120 240 0 240 0 0 -120 0 -120 120 0 120 0 0 -120 0 -120 120 0 120 0 0 -240 0 -240 120 0 120 0 0 -600 0 -600 -120 0 -120 0 0 -240 0 -240 -120 0 -120 0 0 -120 0 -120 -120 0 -120 0 0 -120 0 -120 -240 0 -240 0 0 -120 0 -120 -600 0 -600 0 0 120 0 120 -240 0 -240 0 0 120 0 120 -120 0 -120 0 0 120 0 120 -120 0 -120 0 0 240 0 240 -120 0 -120 0 0 600 0 600 120 0 120 0 0 240 0 240 120 0 120 0 0 120 0 120 120 0 120 0 0 120 0 120 240 0 240 0 0 120 0 120 600 0 600 0 0 -120z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M6000 3010 l0 -120 120 0 120 0 0 -120 0 -120 -120 0 -120 0 0 -120 0 -120 120 0 120 0 0 120 0 120 120 0 120 0 0 -120 0 -120 120 0 120 0 0 120 0 120 -120 0 -120 0 0 120 0 120 120 0 120 0 0 120 0 120 -120 0 -120 0 0 -120 0 -120 -120 0 -120 0 0 120 0 120 -120 0 -120 0 0 -120z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M7440 3010 l0 -120 120 0 120 0 0 -120 0 -120 -120 0 -120 0 0 -120 0 -120 120 0 120 0 0 120 0 120 120 0 120 0 0 -120 0 -120 120 0 120 0 0 120 0 120 -120 0 -120 0 0 120 0 120 120 0 120 0 0 120 0 120 -120 0 -120 0 0 -120 0 -120 -120 0 -120 0 0 120 0 120 -120 0 -120 0 0 -120z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M6480 1570 l0 -120 -120 0 -120 0 0 -120 0 -120 -120 0 -120 0 0 -120 0 -120 120 0 120 0 0 120 0 120 120 0 120 0 0 120 0 120 600 0 600 0 0 -120 0 -120 120 0 120 0 0 -120 0 -120 120 0 120 0 0 120 0 120 -120 0 -120 0 0 120 0 120 -120 0 -120 0 0 120 0 120 -600 0 -600 0 0 -120z\"\n  }))));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgSad);\nexport default __webpack_public_path__ + \"static/media/sad.d8d4f23b.svg\";\nexport { ForwardRef as ReactComponent };","var _g;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgSurprised(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: \"545.000000pt\",\n    height: \"555.000000pt\",\n    viewBox: \"510 104 400.000000 200.000000\",\n    preserveAspectRatio: \"xMidYMid meet\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    transform: \"translate(0.000000,865.000000) scale(0.100000,-0.100000)\",\n    fill: \"currentColor\",\n    stroke: \"none\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M6480 8530 l0 -120 -240 0 -240 0 0 -120 0 -120 -120 0 -120 0 0 -120 0 -120 -120 0 -120 0 0 -120 0 -120 -120 0 -120 0 0 -240 0 -240 -120 0 -120 0 0 -600 0 -600 120 0 120 0 0 -240 0 -240 120 0 120 0 0 -120 0 -120 120 0 120 0 0 -120 0 -120 120 0 120 0 0 -120 0 -120 240 0 240 0 0 -120 0 -120 605 0 605 0 0 120 0 120 240 0 240 0 0 120 0 120 120 0 120 0 0 120 0 120 120 0 120 0 0 120 0 120 120 0 120 0 0 240 0 240 120 0 120 0 0 600 0 600 -120 0 -120 0 0 240 0 240 -120 0 -120 0 0 120 0 120 -120 0 -120 0 0 120 0 120 -120 0 -120 0 0 120 0 120 -240 0 -240 0 0 120 0 120 -605 0 -605 0 0 -120z m1200 -240 l0 -120 240 0 240 0 0 -120 0 -120 120 0 120 0 0 -120 0 -120 120 0 120 0 0 -240 0 -240 120 0 120 0 0 -600 0 -600 -120 0 -120 0 0 -240 0 -240 -120 0 -120 0 0 -120 0 -120 -120 0 -120 0 0 -120 0 -120 -240 0 -240 0 0 -120 0 -120 -600 0 -600 0 0 120 0 120 -240 0 -240 0 0 120 0 120 -120 0 -120 0 0 120 0 120 -120 0 -120 0 0 240 0 240 -120 0 -120 0 0 600 0 600 120 0 120 0 0 240 0 240 120 0 120 0 0 120 0 120 120 0 120 0 0 120 0 120 240 0 240 0 0 120 0 120 600 0 600 0 0 -120z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M6000 7570 l0 -360 360 0 360 0 0 360 0 360 -360 0 -360 0 0 -360z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M7440 7570 l0 -360 360 0 360 0 0 360 0 360 -360 0 -360 0 0 -360z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M6720 6250 l0 -240 -120 0 -120 0 0 -120 0 -120 120 0 120 0 0 -240 0 -240 360 0 360 0 0 240 0 240 120 0 120 0 0 120 0 120 -120 0 -120 0 0 240 0 240 -360 0 -360 0 0 -240z m480 -120 l0 -120 120 0 120 0 0 -120 0 -120 -120 0 -120 0 0 -120 0 -120 -120 0 -120 0 0 120 0 120 -120 0 -120 0 0 120 0 120 120 0 120 0 0 120 0 120 120 0 120 0 0 -120z\"\n  }))));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgSurprised);\nexport default __webpack_public_path__ + \"static/media/surprised.8cc9b2ea.svg\";\nexport { ForwardRef as ReactComponent };","var _g;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgVictorious(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: \"545.000000pt\",\n    height: \"549.000000pt\",\n    viewBox: \"0 470 405.000000 380.000000\",\n    preserveAspectRatio: \"xMidYMid meet\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    transform: \"translate(0.000000,865.000000) scale(0.100000,-0.100000)\",\n    fill: \"currentColor\",\n    stroke: \"none\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1440 3970 l0 -120 -240 0 -240 0 0 -120 0 -120 -120 0 -120 0 0 -120 0 -120 -120 0 -120 0 0 -120 0 -120 -120 0 -120 0 0 -240 0 -240 -120 0 -120 0 0 -600 0 -600 120 0 120 0 0 -240 0 -240 120 0 120 0 0 -120 0 -120 120 0 120 0 0 -120 0 -120 120 0 120 0 0 -120 0 -120 240 0 240 0 0 -120 0 -120 605 0 605 0 0 120 0 120 240 0 240 0 0 120 0 120 120 0 120 0 0 120 0 120 120 0 120 0 0 120 0 120 120 0 120 0 0 240 0 240 120 0 120 0 0 600 0 600 -120 0 -120 0 0 240 0 240 -120 0 -120 0 0 120 0 120 -120 0 -120 0 0 120 0 120 -120 0 -120 0 0 120 0 120 -240 0 -240 0 0 120 0 120 -605 0 -605 0 0 -120z m1200 -240 l0 -120 240 0 240 0 0 -120 0 -120 120 0 120 0 0 -120 0 -120 120 0 120 0 0 -240 0 -240 120 0 120 0 0 -240 0 -240 -120 0 -120 0 0 -120 0 -120 120 0 120 0 0 -240 0 -240 -120 0 -120 0 0 -240 0 -240 -120 0 -120 0 0 -120 0 -120 -120 0 -120 0 0 -120 0 -120 -240 0 -240 0 0 -120 0 -120 -600 0 -600 0 0 120 0 120 -240 0 -240 0 0 120 0 120 -120 0 -120 0 0 120 0 120 -120 0 -120 0 0 240 0 240 -120 0 -120 0 0 240 0 240 120 0 120 0 0 120 0 120 -120 0 -120 0 0 240 0 240 120 0 120 0 0 240 0 240 120 0 120 0 0 120 0 120 120 0 120 0 0 120 0 120 240 0 240 0 0 120 0 120 600 0 600 0 0 -120z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M960 2770 l0 -120 -120 0 -120 0 0 -120 0 -120 -120 0 -120 0 0 -120 0 -120 120 0 120 0 0 120 0 120 120 0 120 0 0 -120 0 -120 120 0 120 0 0 -120 0 -120 240 0 240 0 0 120 0 120 120 0 120 0 0 240 0 240 120 0 120 0 0 -240 0 -240 120 0 120 0 0 -120 0 -120 240 0 240 0 0 120 0 120 120 0 120 0 0 120 0 120 120 0 120 0 0 -120 0 -120 120 0 120 0 0 120 0 120 -120 0 -120 0 0 120 0 120 -120 0 -120 0 0 120 0 120 -1080 0 -1080 0 0 -120z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1200 1090 l0 -120 120 0 120 0 0 -120 0 -120 600 0 600 0 0 120 0 120 120 0 120 0 0 120 0 120 -120 0 -120 0 0 -120 0 -120 -600 0 -600 0 0 120 0 120 -120 0 -120 0 0 -120z\"\n  }))));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgVictorious);\nexport default __webpack_public_path__ + \"static/media/victorious.fc8a5835.svg\";\nexport { ForwardRef as ReactComponent };","import React from 'react';\r\nimport {ReactComponent as Happy} from \"../../assets/happy.svg\";\r\nimport {ReactComponent as Sad} from \"../../assets/sad.svg\";\r\nimport {ReactComponent as Surprised} from \"../../assets/surprised.svg\";\r\nimport {ReactComponent as Victorious} from \"../../assets/victorious.svg\";\r\nimport {AppStoreEntries} from \"../../core/store/types/appStore\";\r\nimport {useStoreState} from \"../../core/store/store\";\r\nimport {GameState} from \"../../core/store/types/gameState\";\r\n\r\nconst Face = React.memo<{ gameState: GameState, onClick: () => void, className: string}>(function Face({gameState, onClick, className}) {\r\n    let Component;\r\n\r\n    switch (gameState) {\r\n        case GameState.InGame:\r\n            Component = Happy;\r\n            break;\r\n        case GameState.Loading:\r\n        case GameState.Refreshing:\r\n            Component = Surprised;\r\n            break;\r\n        case GameState.Lost:\r\n            Component = Sad;\r\n            break;\r\n        case GameState.Won:\r\n            Component = Victorious;\r\n            break;\r\n    }\r\n\r\n    return <Component className={className} onClick={onClick}/>\r\n});\r\n\r\nexport const GameUI = React.memo<GameUIProps>(function GameUI({className}) {\r\n\r\n    const [mineCounter] = useStoreState<number>(AppStoreEntries.mineCounter);\r\n    const [gameState, setGameState] = useStoreState<GameState>(AppStoreEntries.gameState);\r\n    const [timer] = useStoreState<number>(AppStoreEntries.timer);\r\n\r\n    return (\r\n        <div className={`GameUI-root ${className ?? ''}`}>\r\n            <div className=\"GameUI-numberBoxContainer\">\r\n                {\r\n                    gameState !== GameState.Loading &&\r\n                    <div className=\"GameUI-numberBox\">\r\n                        {mineCounter}\r\n                    </div>\r\n                }\r\n            </div>\r\n            <Face className=\"GameUI-face\" gameState={gameState} onClick={() => {\r\n                if (gameState === GameState.Loading) {\r\n                    return;\r\n                }\r\n                setGameState(GameState.Loading);\r\n            }}/>\r\n            <div className=\"GameUI-numberBoxContainer\">\r\n                {\r\n                    gameState !== GameState.Loading &&\r\n                    <div className=\"GameUI-numberBox\">\r\n                        {timer}\r\n                    </div>\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n});\r\n\r\ninterface GameUIProps {\r\n    className?: string;\r\n}\r\n","import {MapOptions} from \"../store/types/mapOptions\";\r\nimport {AppStoreEntries} from \"../store/types/appStore\";\r\n\r\nexport class LocalStorage {\r\n    private constructor() {}\r\n\r\n    static getMapOptions(): MapOptions | null {\r\n        const optionsString = localStorage.getItem(AppStoreEntries.mapOptions.toString());\r\n        if (optionsString === null) {\r\n            return null;\r\n        }\r\n        return JSON.parse(optionsString);\r\n    }\r\n\r\n    static setMapOptions(options: MapOptions) {\r\n        localStorage.setItem(AppStoreEntries.mapOptions.toString(), JSON.stringify(options));\r\n    }\r\n}\r\n","import React, {ChangeEvent, useEffect, useState} from 'react';\r\nimport {Button, Dialog, DialogActions, DialogContent, DialogTitle, TextField} from \"@material-ui/core\";\r\nimport {Subject, useSubject} from \"../../core/subject\";\r\nimport {AppStoreEntries} from \"../../core/store/types/appStore\";\r\nimport {useStoreState} from \"../../core/store/store\";\r\nimport {GameState} from \"../../core/store/types/gameState\";\r\nimport {MapOptions} from \"../../core/store/types/mapOptions\";\r\nimport {LocalStorage} from \"../../core/utils/localStorage\";\r\n\r\nexport const SettingsDialog = React.memo<SettingsDialogProps>(function SettingsDialog({className, openSubj}) {\r\n    const [open, setOpen] = useSubject(openSubj);\r\n\r\n    const [{width: widthState, height: heightState, mineCount: mineCountState}, setMapOptions] = useStoreState<MapOptions>(AppStoreEntries.mapOptions);\r\n    const [gameState, setGameState] = useStoreState<GameState>(AppStoreEntries.gameState)\r\n\r\n    const [width, setWidth] = useState(widthState.toString());\r\n    const [widthErrors, setWidthErrors] = useState<Array<string>>([]);\r\n    const [height, setHeight] = useState(heightState.toString());\r\n    const [heightErrors, setHeightErrors] = useState<Array<string>>([]);\r\n    const [mineCount, setMineCount] = useState(mineCountState.toString());\r\n    const [mineCountErrors, setMineCountErrors] = useState<Array<string>>([]);\r\n\r\n    const [size, setSize] = useState(Number(width) * Number(height));\r\n    useEffect(() => {\r\n        setSize(Number(width) * Number(height));\r\n    }, [width, height])\r\n\r\n    function handleWidthChange(e: ChangeEvent<HTMLInputElement>) {\r\n        let rawValue = e.target.value;\r\n\r\n        if (!rawValue) {\r\n            setWidthErrors(['This field is required']);\r\n            setWidth(rawValue);\r\n            return;\r\n        }\r\n\r\n\r\n        rawValue = rawValue.replace(/^[\\d]]/g, '');\r\n        setWidth(rawValue);\r\n\r\n        const value = Number(rawValue);\r\n        const errors: Array<string> = [];\r\n\r\n        if (value < 1) {\r\n            errors.push('Width should be greater then 1');\r\n        } else if (value > 10000) {\r\n            errors.push('Width should be lesser then 10000');\r\n        }\r\n\r\n        setWidthErrors(errors);\r\n    }\r\n\r\n    function handleHeightChange(e: ChangeEvent<HTMLInputElement>) {\r\n        let rawValue = e.target.value;\r\n\r\n        if (!rawValue) {\r\n            setHeightErrors(['This field is required']);\r\n            setHeight(rawValue);\r\n            return;\r\n        }\r\n\r\n        rawValue = rawValue.replace(/^[\\d]]/g, '');\r\n        setHeight(rawValue);\r\n\r\n        const value = Number(rawValue);\r\n        const errors: Array<string> = [];\r\n\r\n        if (value < 1) {\r\n            errors.push('Height should be greater then 1');\r\n        } else if (value > 10000) {\r\n            errors.push('Height should be lesser then 10000');\r\n        }\r\n\r\n        setHeightErrors(errors);\r\n    }\r\n\r\n    function handleMineCountChange(e: ChangeEvent<HTMLInputElement>) {\r\n        let rawValue = e.target.value;\r\n\r\n        if (!rawValue) {\r\n            setMineCountErrors(['This field is required']);\r\n            setMineCount(rawValue);\r\n            return;\r\n        }\r\n\r\n        rawValue = rawValue.replace(/^[\\d]]/g, '');\r\n        setMineCount(rawValue);\r\n\r\n        const value = Number(rawValue);\r\n        const errors: Array<string> = [];\r\n\r\n        if (value < 1) {\r\n            errors.push('There should be at least 1 mine :)');\r\n        } else if (value >= size) {\r\n            errors.push('Number of mines should be lesser then total size minus 1');\r\n        }\r\n\r\n        setMineCountErrors(errors);\r\n    }\r\n\r\n    function handleCancel() {\r\n        setOpen(false);\r\n    }\r\n\r\n    function handleSubmit() {\r\n        if (!!widthErrors.length || !!heightErrors.length || !!mineCountErrors.length) {\r\n            return;\r\n        }\r\n        const newMapOptions: MapOptions = {\r\n            width: Number(width),\r\n            height: Number(height),\r\n            mineCount: Number(mineCount),\r\n        };\r\n\r\n        LocalStorage.setMapOptions(newMapOptions);\r\n\r\n        setOpen(false);\r\n\r\n        setGameState(GameState.Loading);\r\n        setMapOptions(newMapOptions);\r\n    }\r\n\r\n\r\n    return (\r\n        <Dialog open={open} className=\"SettingsDialog-root\" onClose={handleCancel}>\r\n            <DialogTitle>Minesweeper Game Settings</DialogTitle>\r\n            <DialogContent className=\"SettingsDialog-content\">\r\n                <TextField label=\"Width\"\r\n                           className=\"SettingsDialog-textField\"\r\n                           value={width}\r\n                           onChange={handleWidthChange}\r\n                           error={!!widthErrors.length}\r\n                           helperText={widthErrors[0] ?? undefined}/>\r\n                <TextField label=\"Height\" className=\"SettingsDialog-textField\"\r\n                           value={height}\r\n                           onChange={handleHeightChange}\r\n                           error={!!heightErrors.length}\r\n                           helperText={heightErrors[0] ?? undefined}/>\r\n                <TextField label=\"Mines\"\r\n                           className=\"SettingsDialog-textField\"\r\n                           value={mineCount}\r\n                           onChange={handleMineCountChange}\r\n                           error={!!mineCountErrors.length}\r\n                           helperText={mineCountErrors[0] ?? undefined}/>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={handleCancel}>\r\n                    Cancel\r\n                </Button>\r\n                <Button disabled={!!widthErrors.length || !!heightErrors.length || !!mineCountErrors.length}\r\n                        onClick={handleSubmit}>\r\n                    Start\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    )\r\n});\r\n\r\ninterface SettingsDialogProps {\r\n    className?: string;\r\n    openSubj: Subject<boolean>\r\n}\r\n","import React, {useState} from 'react';\r\nimport {IconButton, Menu, MenuItem, Paper} from \"@material-ui/core\";\r\nimport {MoreVert} from \"@material-ui/icons\";\r\nimport {GameUI} from \"../gameUi/GameUI\";\r\nimport {SettingsDialog} from \"../settingsDialog/SettingsDialog\";\r\nimport {Subject} from \"../../core/subject\";\r\n\r\nexport const GameMenu = React.memo<MenuProps>(function GameMenu({className}) {\r\n    const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\r\n    const open = Boolean(anchorEl);\r\n\r\n    const [dialogOpenSubj] = useState(() => new Subject<boolean>(false));\r\n\r\n    const handleClick = (event: React.MouseEvent<HTMLElement>) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n    return (\r\n        <Paper className={`Menu-root ${className ?? ''}`}>\r\n            <GameUI className=\"Menu-inGameUi\"/>\r\n            <div className=\"Menu-optionsMenu\">\r\n                <IconButton onClick={handleClick}>\r\n                    <MoreVert />\r\n                </IconButton>\r\n                <Menu anchorEl={anchorEl}\r\n                      open={open}\r\n                      onClose={handleClose}\r\n                      anchorOrigin={{\r\n                          vertical: 'top',\r\n                          horizontal: 'right',\r\n                      }}\r\n                      transformOrigin={{\r\n                          vertical: 'top',\r\n                          horizontal: 'right',\r\n                      }}\r\n                >\r\n                    <MenuItem onClick={() => {\r\n                        dialogOpenSubj.next(true)\r\n                        setAnchorEl(null);\r\n                    }}>\r\n                        New Game\r\n                    </MenuItem>\r\n                </Menu>\r\n            </div>\r\n            <SettingsDialog openSubj={dialogOpenSubj}/>\r\n        </Paper>\r\n    )\r\n});\r\n\r\ninterface MenuProps {\r\n    className?: string;\r\n}\r\n","import React from 'react';\nimport './App.scss';\nimport {Field} from \"./components/field/Field\";\nimport {GameMenu} from \"./components/gameMenu/GameMenu\";\nimport {StyledEngineProvider} from '@material-ui/core/styles';\nimport {appStore} from \"./core/store/store\";\nimport {AppStoreEntries} from \"./core/store/types/appStore\";\nimport {GameState} from \"./core/store/types/gameState\";\nimport {LocalStorage} from \"./core/utils/localStorage\";\nimport {defaultMapOptions} from \"./core/store/types/mapOptions\";\n\n\nappStore\n    .register(AppStoreEntries.timer, 0)\n    .register(AppStoreEntries.mineCounter, 0)\n    .register(AppStoreEntries.gameState, GameState.Loading)\n    .register(AppStoreEntries.mapOptions, LocalStorage.getMapOptions() ?? defaultMapOptions);\n\n\nfunction App() {\n    return (\n        <StyledEngineProvider injectFirst>\n            <GameMenu/>\n            <Field/>\n        </StyledEngineProvider>\n    );\n}\n\nexport default App;\n","export interface MapOptions {\r\n    width: number;\r\n    height: number;\r\n    mineCount: number;\r\n}\r\n\r\nexport const defaultMapOptions: MapOptions = {\r\n    width: 10,\r\n    height: 10,\r\n    mineCount: 25\r\n}\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","export enum GameState {\r\n    InGame = 'InGame',\r\n    Lost = 'Lost',\r\n    Won = 'Won',\r\n    Loading = 'Loading',\r\n    Refreshing = 'Refreshing'\r\n}\r\n","\r\nexport enum CellState {\r\n    closed,\r\n    open\r\n}\r\n\r\nexport enum CellValue {\r\n    notDefined = -1,\r\n    empty = 0,\r\n    one,\r\n    two,\r\n    three,\r\n    four,\r\n    five,\r\n    six,\r\n    seven,\r\n    eight,\r\n    mine,\r\n}\r\n\r\nexport enum CellValueOpen {\r\n    empty = 10,\r\n    one,\r\n    two,\r\n    three,\r\n    four,\r\n    five,\r\n    six,\r\n    seven,\r\n    eight,\r\n    mine,\r\n}\r\n\r\nexport enum CellValueFlag {\r\n    empty = 20,\r\n    one,\r\n    two,\r\n    three,\r\n    four,\r\n    five,\r\n    six,\r\n    seven,\r\n    eight,\r\n    mine,\r\n}\r\n\r\nexport type MapCellValue = CellValue | CellValueOpen | CellValueFlag;\r\n\r\nexport function isCellValue(val: number): val is CellValue {\r\n    return val < 10;\r\n}\r\n\r\nexport function isCellValueOpen(val: number): val is CellValueOpen {\r\n    return val >= 10 && val < 20;\r\n}\r\n\r\nexport function isCellValueFlag(val: number): val is CellValueFlag {\r\n    return val >= 20;\r\n}\r\n\r\nexport function isMine(val: MapCellValue): boolean {\r\n    return val === CellValue.mine || val === CellValueOpen.mine || val === CellValueFlag.mine;\r\n}\r\n","export const AppStoreEntries = {\r\n    timer: Symbol('timer'),\r\n    mineCounter: Symbol('mineCounter'),\r\n    gameState: Symbol('gameState'),\r\n    mapState: Symbol('mapState'),\r\n    mapOptions: Symbol('mapOptions')\r\n}\r\n\r\n","import {Subject, useSubject} from \"../subject\";\r\n\r\nexport type StoreKey = string | symbol;\r\n\r\nclass Store {\r\n    private reactiveState = new Map<StoreKey, Subject<unknown>>();\r\n\r\n    constructor() {\r\n        this.register = this.register.bind(this);\r\n        this.unregister = this.unregister.bind(this);\r\n    }\r\n\r\n    register<T>(key: StoreKey, initialValue: T): this {\r\n        this.reactiveState.set(key, new Subject(initialValue) as Subject<unknown>);\r\n\r\n        return this;\r\n    }\r\n\r\n    unregister(key: StoreKey): boolean {\r\n        return this.reactiveState.delete(key);\r\n    }\r\n\r\n    getSubject<T>(key: StoreKey): Subject<T> {\r\n        if (!this.reactiveState.has(key)) {\r\n            throw new Error(`Store -> entry with key ${key.toString()} was not registered in the Store`);\r\n        }\r\n\r\n        return this.reactiveState.get(key)! as Subject<T>;\r\n    }\r\n\r\n    getValue<T>(key: StoreKey): T {\r\n        return this.getSubject<T>(key).value;\r\n    }\r\n}\r\n\r\nexport const appStore = new Store();\r\n\r\n\r\nexport function useStore() {\r\n    return [\r\n        appStore.register,\r\n        appStore.unregister\r\n    ];\r\n}\r\n\r\nexport function useStoreState<T>(key: StoreKey) {\r\n    return useSubject<T>(appStore.getSubject(key));\r\n}\r\n\r\n\r\n","import {useEffect, useState} from \"react\";\r\n\r\nexport class Subject<T> implements Observable<T> {\r\n    private subscribers = new Map<number, (val: T) => void>();\r\n    private nextSubIndex = 0;\r\n\r\n    constructor(private _value: T) {\r\n    }\r\n\r\n    get value() {\r\n        return this._value;\r\n    }\r\n\r\n    next(value: T): void {\r\n        this._value = value;\r\n        // this.subscribers.forEach((notifier) => notifier(this._value))\r\n        this.subscribers.forEach((notifier) => queueMicrotask(() => notifier(value)))\r\n\r\n    }\r\n\r\n    complete() {\r\n        this.subscribers.clear();\r\n    }\r\n\r\n    subscribe(next: (val: T) => void, skipFirst = false): Subscription {\r\n        const index = this.nextSubIndex;\r\n        this.nextSubIndex += 1;\r\n        this.subscribers.set(index, next);\r\n\r\n        if (!skipFirst) {\r\n            queueMicrotask(() => next(this._value));\r\n        }\r\n\r\n        return {\r\n            unsubscribe: () => {\r\n                this.subscribers.delete(index);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport interface Observable<T> {\r\n    subscribe(next: (val: T) => void): Subscription;\r\n}\r\n\r\nexport interface Subscription {\r\n    unsubscribe(): void;\r\n}\r\n\r\nexport function useSubject<T>(subject: Subject<T>, skipFirst = true): [T, (val: T) => void] {\r\n    const [value, setValue] = useState(subject.value);\r\n\r\n    useEffect(() => {\r\n        const sub = subject.subscribe(setValue, skipFirst);\r\n        return () => sub.unsubscribe();\r\n    }, []);\r\n\r\n    return [value, (val: T) => subject.next(val)];\r\n}\r\n\r\n","import {releaseProxy, Remote, wrap} from \"comlink\";\r\nimport {Subject} from \"../subject\";\r\nimport {appStore} from \"../store/store\";\r\nimport {GenerateMapWorker} from \"../workers/mapGenerator\";\r\nimport {CellValue, isCellValueFlag, isCellValueOpen, isMine, MapCellValue} from \"./types/cell\";\r\nimport {AppStoreEntries} from \"../store/types/appStore\";\r\nimport {Queue} from \"../utils/queue\";\r\nimport {Timer} from \"../utils/timer\";\r\nimport {GameState} from \"../store/types/gameState\";\r\nimport {calculateNeighbours} from \"../utils/calculateNeighbours\";\r\n\r\n/**\r\n * Class that handles map creation and handling of user's action with map.\r\n */\r\nexport class MinesweeperMap {\r\n    public readonly size: number;\r\n    private readonly _arrayBuffer: SharedArrayBuffer;\r\n\r\n    private readonly _map: Int8Array;\r\n    private readonly _width: number;\r\n    private readonly _height: number;\r\n    private readonly _totalMineCount: number;\r\n    private readonly allocatedBytes: number;\r\n    private readonly generators = new Array<Remote<GenerateMapWorker>>();\r\n    private readonly generatorsWorkers = new Array<Worker>();\r\n    private readonly timer: Timer = new Timer(appStore.getSubject(AppStoreEntries.timer));\r\n    private readonly chainOpenQueue = new Queue<number>();\r\n    private readonly mineCountSubj = appStore.getSubject<number>(AppStoreEntries.mineCounter);\r\n    private readonly gameState = appStore.getSubject<GameState>(AppStoreEntries.gameState);\r\n    private readonly cellsLeftToOpen: Subject<number>;\r\n    private firstClick: boolean = true;\r\n    private emptyCellIndex?: number;\r\n\r\n    private destroyed = false;\r\n\r\n    constructor(width: number, height: number, totalMineCount: number, private threadsNumber = 4) {\r\n        this._width = width;\r\n        this._height = height;\r\n        this._totalMineCount = totalMineCount;\r\n\r\n        this.size = width * height;\r\n\r\n        this.allocatedBytes = this.size;\r\n\r\n        // Handling victory condition\r\n        this.cellsLeftToOpen = new Subject(this.size - this._totalMineCount);\r\n        this.cellsLeftToOpen.subscribe(val => {\r\n            if (val !== 0) {\r\n                return;\r\n            }\r\n            this.gameState.next(GameState.Won);\r\n            this.mineCountSubj.next(0);\r\n            this.timer.stop()\r\n        });\r\n\r\n        // Allocating memory\r\n        this._arrayBuffer = new SharedArrayBuffer(this.allocatedBytes);\r\n\r\n        // Preparing access point to the map data\r\n        this._map = new Int8Array(this._arrayBuffer);\r\n\r\n        // Filling map with empty values\r\n        this._map\r\n            .fill(CellValue.mine, 0, totalMineCount)\r\n            .fill(CellValue.notDefined, totalMineCount);\r\n\r\n        // Initializing workers\r\n        for (let i = 0; i < this.threadsNumber; i++) {\r\n            const worker = new Worker('../workers/mapGenerator', {name: `map-generator-worker-${i}`, type: 'module'});\r\n            const mapGenerator = wrap<GenerateMapWorker>(worker);\r\n            mapGenerator.setMap(this._arrayBuffer);\r\n            this.generators.push(mapGenerator);\r\n            this.generatorsWorkers.push(worker);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Destroys map.\r\n     */\r\n    destroy() {\r\n        if (this.destroyed) {\r\n            return;\r\n        }\r\n\r\n        this.generators.forEach(generator => generator[releaseProxy]());\r\n        this.generatorsWorkers.forEach(worker => worker.terminate());\r\n        this.timer.clear();\r\n        this.mineCountSubj.next(0);\r\n\r\n        this.destroyed = true;\r\n    }\r\n\r\n    /**\r\n     * Generates map using workers to perform it in plural threads.\r\n     */\r\n    async generate() {\r\n        const t0 = performance.now();\r\n        // Init generation\r\n        let arr = await Promise.all(this.generators.map((generator, index) => generator.generateMap(index, this.threadsNumber)));\r\n\r\n        // Saving index of random empty cell to make the first user click to be safe\r\n        arr = arr.filter(val => val !== undefined);\r\n        this.emptyCellIndex = arr[Math.floor(Math.random() * (arr.length - 1))];\r\n\r\n        if (this.emptyCellIndex === undefined && this._map[this._map.length - 1] === CellValue.notDefined) {\r\n            this.emptyCellIndex = this._map.length - 1;\r\n        }\r\n\r\n        // Perform calculation of neighbours for each cell\r\n        // This action is quite heavy and takes a bit long, but I decided to do it this way instead of performing it 'on the fly' to save time on user clicks checks.\r\n        await this.calculateNeighboursInRange({start: 0, end: this._width - 1}, {start: 0, end: this._height - 1});\r\n        const t1 = performance.now();\r\n        console.log(`Map generated in ${t1 - t0} milliseconds.`);\r\n\r\n        // Initializing timer\r\n        this.timer.start();\r\n        this.mineCountSubj.next(this._totalMineCount);\r\n        this.gameState.next(GameState.InGame);\r\n    }\r\n\r\n    /**\r\n     * Returns left click handler for the cell\r\n     * @param columnIndex\r\n     * @param rowIndex\r\n     */\r\n    getCellClickHandler(columnIndex: number, rowIndex: number): () => MapCellValue | undefined {\r\n        return () => {\r\n            // If there something going on already we skip this action\r\n            if (this.gameState.value !== GameState.InGame) {\r\n                return;\r\n            }\r\n\r\n            let cellValue = this.getCellValueXY(columnIndex, rowIndex);\r\n\r\n            if (cellValue === undefined || isCellValueOpen(cellValue) || isCellValueFlag(cellValue)) {\r\n                return;\r\n            }\r\n\r\n            if (this.firstClick && cellValue === CellValue.mine) {\r\n                cellValue = this.handleMineFirstClick(columnIndex, rowIndex, cellValue);\r\n            }\r\n\r\n            this.firstClick = false;\r\n\r\n            // Handle loose\r\n            if (cellValue === CellValue.mine) {\r\n                this.timer.stop();\r\n                this.gameState.next(GameState.Lost);\r\n                return;\r\n            }\r\n\r\n            // Handle simple open\r\n            if (cellValue !== CellValue.empty) {\r\n                const newCellValue = cellValue + 10;\r\n                this.setCellValueXY(columnIndex, rowIndex, newCellValue);\r\n                this.cellsLeftToOpen.next(this.cellsLeftToOpen.value - 1);\r\n                // @ts-ignore\r\n                if (this.gameState.value === GameState.Refreshing) {\r\n                    this.gameState.next(GameState.InGame)\r\n                }\r\n                return newCellValue;\r\n            }\r\n\r\n            // Handle chain open id click was performed on empty cell\r\n            this.gameState.next(GameState.Refreshing);\r\n            const t0 = performance.now();\r\n            this.chainOpen({columnIndex, rowIndex}).then((openedCells) => {\r\n                this.cellsLeftToOpen.next(this.cellsLeftToOpen.value - openedCells);\r\n                console.log(`Chain open performed in ${performance.now() - t0}.`);\r\n                this.gameState.next(GameState.InGame);\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Returns right click handler for the cell\r\n     * @param columnIndex\r\n     * @param rowIndex\r\n     */\r\n    getCellContextMenuHandler(columnIndex: number, rowIndex: number): () => MapCellValue | undefined {\r\n        return () => {\r\n            if (this.gameState.value !== GameState.InGame) {\r\n                return;\r\n            }\r\n\r\n            const cellValue = this.getCellValueXY(columnIndex, rowIndex);\r\n            if (cellValue === undefined || isCellValueOpen(cellValue)) {\r\n                return;\r\n            }\r\n\r\n            let newCellValue;\r\n\r\n            if (isCellValueFlag(cellValue)) {\r\n                if (this.mineCountSubj.value === this._totalMineCount) {\r\n                    return;\r\n                }\r\n                newCellValue = cellValue - 20;\r\n                this.setCellValueXY(columnIndex, rowIndex, newCellValue);\r\n                this.mineCountSubj.next(this.mineCountSubj.value + 1);\r\n            } else {\r\n                if (this.mineCountSubj.value === 0) {\r\n                    return;\r\n                }\r\n                newCellValue = cellValue + 20;\r\n                this.setCellValueXY(columnIndex, rowIndex, newCellValue);\r\n                this.mineCountSubj.next(this.mineCountSubj.value - 1);\r\n            }\r\n\r\n            return newCellValue;\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Returns index of the cell or undefined if there is no such cell\r\n     * @param columnIndex\r\n     * @param rowIndex\r\n     */\r\n    getIndex(columnIndex: number, rowIndex: number) {\r\n        if (columnIndex < 0 || columnIndex >= this._width) {\r\n            return undefined;\r\n        }\r\n        if (rowIndex < 0 || rowIndex >= this._height) {\r\n            return undefined;\r\n        }\r\n        return this._height * rowIndex + columnIndex;\r\n    }\r\n\r\n    getCellValueXY(columnIndex: number, rowIndex: number) {\r\n        if (columnIndex === undefined || rowIndex === undefined) {\r\n            return undefined;\r\n        }\r\n\r\n        return this.getCellValue(this._height * rowIndex + columnIndex);\r\n    }\r\n\r\n    setCellValueXY(columnIndex: number, rowIndex: number, value: MapCellValue) {\r\n        return this.setCellValue(this._height * rowIndex + columnIndex, value);\r\n    }\r\n\r\n    setCellValue(index: number, value: MapCellValue) {\r\n        Atomics.store(this._map, index, value);\r\n    }\r\n\r\n    getCellValue(index: number): MapCellValue {\r\n        return Atomics.load(this._map, index);\r\n    }\r\n\r\n    /**\r\n     * Performs neighbour calculation in provided range.\r\n     * @param columnRange\r\n     * @param rowRange\r\n     */\r\n    async calculateNeighboursInRange(columnRange: { start: number, end: number }, rowRange: { start: number, end: number }) {\r\n        const t0 = performance.now();\r\n        await Promise.all(\r\n            this.generators.map((generator, index) => {\r\n                return generator.calculateNeighboursInRange(\r\n                    this._width,\r\n                    this._height,\r\n                    columnRange,\r\n                    rowRange,\r\n                    index\r\n                )\r\n            })\r\n        );\r\n        const t1 = performance.now();\r\n        console.log(`Range calculated in ${t1 - t0}`);\r\n    }\r\n\r\n    /**\r\n     * Handle the first click on the map if it was mine click.\r\n     * @param columnIndex\r\n     * @param rowIndex\r\n     * @param cellValue\r\n     * @private\r\n     */\r\n    private handleMineFirstClick(columnIndex: number, rowIndex: number, cellValue: MapCellValue): MapCellValue {\r\n        if (!this.emptyCellIndex) {\r\n            return cellValue;\r\n        }\r\n        this.gameState.next(GameState.Refreshing);\r\n\r\n        // Update clicked cell\r\n        this.setCellValue(this.emptyCellIndex, CellValue.mine);\r\n\r\n        this.setCellValueXY(columnIndex, rowIndex, this.calculateNeighbours(columnIndex, rowIndex));\r\n\r\n        cellValue = this.getCellValueXY(columnIndex, rowIndex)!;\r\n\r\n        this.getCellNeighbours(columnIndex, rowIndex)\r\n            .forEach((neighbour) => {\r\n                if (neighbour === undefined) {\r\n                    return;\r\n                }\r\n\r\n                let neighbourValue = this.getCellValue(neighbour);\r\n\r\n                if (isMine(neighbourValue)) {\r\n                    return;\r\n                }\r\n\r\n                this.setCellValue(neighbour, neighbourValue - 1);\r\n            });\r\n\r\n        // Update previously empty cell\r\n        const emptyCellCol = this.emptyCellIndex % this._width;\r\n        const emptyCellRow = (this.emptyCellIndex - emptyCellCol) / this._width;\r\n\r\n        this.getCellNeighbours(emptyCellCol, emptyCellRow)\r\n            .forEach((neighbour) => {\r\n                if (neighbour === undefined) {\r\n                    return;\r\n                }\r\n\r\n                let neighbourValue = this.getCellValue(neighbour);\r\n\r\n                if (isMine(neighbourValue)) {\r\n                    return;\r\n                }\r\n\r\n                this.setCellValue(neighbour, neighbourValue + 1);\r\n            });\r\n        return cellValue;\r\n    }\r\n\r\n    /**\r\n     * Calculate cell neighbours.\r\n     * @param columnIndex\r\n     * @param rowIndex\r\n     * @private\r\n     */\r\n    private calculateNeighbours(columnIndex: number, rowIndex: number) {\r\n        return calculateNeighbours(this._map, columnIndex, rowIndex, this._width, this._height);\r\n    }\r\n\r\n    /**\r\n     * Handle chain open of the empty cells.\r\n     *\r\n     * NOTE: This method uses breadth-first search to perform opening. It might be improved with multi-threading but due to lack of locks\r\n     * in JS Atomics I was not able to implement this quickly.\r\n     * @param initiator\r\n     * @private\r\n     */\r\n    private async chainOpen(initiator: { columnIndex: number, rowIndex: number }): Promise<number> {\r\n        const index = this.getIndex(initiator.columnIndex, initiator.rowIndex)!;\r\n\r\n        const columnIndex = index % this._width;\r\n        const rowIndex = (index - columnIndex) / this._width;\r\n\r\n        let cellValue;\r\n        try {\r\n            cellValue = this.getCellValue(index);\r\n        } catch (e) {\r\n            return 1;\r\n        }\r\n        if (cellValue >= 10) {\r\n            return 1;\r\n        }\r\n\r\n        this.setCellValue(index, cellValue + 10);\r\n\r\n        if (cellValue !== CellValue.empty) {\r\n            return 0;\r\n        }\r\n\r\n        const neighbours = this.getCellNeighbours(columnIndex, rowIndex).filter(neighbour => neighbour !== undefined) as Array<number>;\r\n\r\n        return (await Promise.all(neighbours.map((neighbour, neighbourIndex) => {\r\n            const generatorIndex = neighbourIndex % this.threadsNumber;\r\n            const columnIndex = neighbour % this._width;\r\n            const rowIndex = (neighbour - columnIndex) / this._width;\r\n\r\n            return this.generators[generatorIndex].chainOpen(this._width, this._height, columnIndex, rowIndex)\r\n        }))).reduce((acc, val) => acc + val) + 1;\r\n    }\r\n\r\n    /**\r\n     * Returns indexes of the provided cell neighbours.\r\n     * @param columnIndex\r\n     * @param rowIndex\r\n     * @private\r\n     */\r\n    private getCellNeighbours(columnIndex: number, rowIndex: number) {\r\n        return [\r\n            this.getIndex(columnIndex - 1, rowIndex - 1),\r\n            this.getIndex(columnIndex - 1, rowIndex + 1),\r\n            this.getIndex(columnIndex + 1, rowIndex - 1),\r\n            this.getIndex(columnIndex + 1, rowIndex + 1),\r\n            this.getIndex(columnIndex, rowIndex - 1),\r\n            this.getIndex(columnIndex, rowIndex + 1),\r\n            this.getIndex(columnIndex + 1, rowIndex),\r\n            this.getIndex(columnIndex - 1, rowIndex),\r\n        ]\r\n    }\r\n}\r\n\r\n","import {Subject} from \"../subject\";\r\n\r\nexport class Timer {\r\n    private t0: number = performance.now();\r\n    private intervalId?: number;\r\n\r\n    constructor(private timerSubject: Subject<number>) {\r\n    }\r\n\r\n    get timePassed() {\r\n        return Math.floor((performance.now() - this.t0) / 1000);\r\n    }\r\n\r\n    start() {\r\n        this.clear();\r\n        this.t0 = performance.now();\r\n\r\n\r\n        // @ts-ignore\r\n        this.intervalId = setInterval(() => {\r\n            const timePassed = this.timePassed;\r\n            if (timePassed > 999) {\r\n                return;\r\n            }\r\n            this.timerSubject.next(this.timePassed);\r\n        }, 1000);\r\n    }\r\n\r\n    stop() {\r\n        clearInterval(this.intervalId);\r\n    }\r\n\r\n    clear() {\r\n        this.timerSubject.next(0);\r\n        clearInterval(this.intervalId);\r\n    }\r\n}\r\n","import {CellValue} from \"../map/types/cell\";\r\n\r\nexport function calculateNeighbours(map: Int8Array, columnIndex: number, rowIndex: number, width: number, height: number): number {\r\n\r\n    let counter = 0;\r\n\r\n    const index = height * rowIndex + columnIndex;\r\n    const column = columnIndex;\r\n    const row = rowIndex;\r\n\r\n    if (column !== 0 && map[index - 1] === CellValue.mine) {\r\n        counter++;\r\n    }\r\n\r\n    if (column !== width - 1 && map[index + 1] === CellValue.mine) {\r\n        counter++;\r\n    }\r\n\r\n    if (row !== 0 && map[index - width] === CellValue.mine) {\r\n        counter++;\r\n    }\r\n\r\n    if (row !== height && map[index + width] === CellValue.mine) {\r\n        counter++;\r\n    }\r\n\r\n    if (column !== 0) {\r\n        if (row !== 0 && map[index - width - 1] === CellValue.mine) {\r\n            counter++;\r\n        }\r\n\r\n        if (row !== height && map[index + width - 1] === CellValue.mine) {\r\n            counter++;\r\n        }\r\n    }\r\n\r\n    if (column !== width - 1) {\r\n        if (row !== 0 && map[index - width + 1] === CellValue.mine) {\r\n            counter++;\r\n        }\r\n\r\n        if (row !== height && map[index + width + 1] === CellValue.mine) {\r\n            counter++;\r\n        }\r\n    }\r\n\r\n    return counter;\r\n}\r\n","export class CollectionNode<T> {\r\n    constructor(public value: T, public next: CollectionNode<T> | null = null) {\r\n    }\r\n}\r\n","import {CollectionNode} from \"./collectionNode\";\r\n\r\nexport class Queue<T> {\r\n    private head: CollectionNode<T> | null = null;\r\n    private tail: CollectionNode<T> | null = null;\r\n\r\n    private _size: number = 0;\r\n    get size() {\r\n        return this._size;\r\n    }\r\n\r\n    isEmpty() {\r\n        return !this.head;\r\n    }\r\n\r\n    peek(): T | null {\r\n        if (this.isEmpty()) {\r\n            return null;\r\n        }\r\n\r\n        return this.head!.value;\r\n    }\r\n\r\n    enqueue(value: T): this {\r\n        const newNode =  new CollectionNode(value);\r\n\r\n        this._size++;\r\n\r\n        if (this.isEmpty()) {\r\n            this.tail = newNode;\r\n            this.head = newNode;\r\n\r\n            return this;\r\n        }\r\n\r\n        this.tail!.next = newNode;\r\n        this.tail = newNode;\r\n\r\n        return this;\r\n    }\r\n\r\n    dequeue(): T | null {\r\n        if (this.isEmpty()) {\r\n            return null;\r\n        }\r\n        const value = this.head!.value;\r\n        this.head = this.head!.next;\r\n        this._size--;\r\n        return value\r\n    }\r\n\r\n}\r\n"],"sourceRoot":""}